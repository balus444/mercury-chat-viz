{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { Config, configSchema, explanationsSchema, Result } from \"@/lib/types\";\nimport { openai } from \"@ai-sdk/openai\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport { generateObject } from \"ai\";\nimport { z } from \"zod\";\n\n// Initialize Supabase client\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport const generateQuery = async (input: string) => {\n  \"use server\";\n  try {\n    const result = await generateObject({\n      model: openai(\"gpt-4o\"),\n      system: `You are a SQL (postgres) and data visualization expert. Your job is to help the user write a SQL query to retrieve the data they need. The database schema is as follows:\n\n      users (\n        user_id bigint PRIMARY KEY,\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text NOT NULL UNIQUE,\n        phone text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      clients (\n        client_id bigint PRIMARY KEY,\n        advisor_id bigint NOT NULL REFERENCES users(user_id),\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text,\n        phone text,\n        date_of_birth date,\n        address text,\n        city text,\n        state text,\n        postal_code text,\n        country text,\n        risk_profile text DEFAULT 'balanced',\n        financial_goal text,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      portfolios (\n        portfolio_id bigint PRIMARY KEY,\n        client_id bigint NOT NULL REFERENCES clients(client_id),\n        name text NOT NULL,\n        portfolio_type text DEFAULT 'investment',\n        risk_level text DEFAULT 'medium',\n        total_value numeric(18,4) DEFAULT 0.00,\n        inception_date date DEFAULT CURRENT_DATE,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      investments (\n        investment_id bigint PRIMARY KEY,\n        portfolio_id bigint NOT NULL REFERENCES portfolios(portfolio_id),\n        asset_name text NOT NULL,\n        asset_type text NOT NULL,\n        ticker_symbol text,\n        quantity numeric(18,4) NOT NULL DEFAULT 0.00,\n        average_purchase_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        current_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        market_value numeric(18,4) GENERATED ALWAYS AS (quantity * current_price) STORED,\n        allocation_percentage numeric(5,2) DEFAULT 0.00,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      Only retrieval queries are allowed. When joining tables, use proper aliases for clarity.\n      For market value calculations, use the market_value column from investments table.\n      For portfolio total value, you can either use the total_value from portfolios or sum up market_value from investments.\n      When dealing with dates, use proper date formatting functions.\n      Always include ORDER BY and LIMIT clauses when appropriate.\n      `,\n      prompt: `Generate the query necessary to retrieve the data the user wants: ${input}`,\n      schema: z.object({\n        query: z.string(),\n      }),\n    });\n    return result.object.query;\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Failed to generate query\");\n  }\n};\n\nexport const runGenerateSQLQuery = async (query: string) => {\n  \"use server\";\n\n  console.log(\"Generated query:\", query);\n\n  const loweredQuery = query.trim().toLowerCase();\n\n  // ✅ Only allow SELECTs\n  if (\n    !loweredQuery.startsWith(\"select\") ||\n    /drop|delete|insert|update|alter|truncate|create|grant|revoke/.test(\n      loweredQuery\n    )\n  ) {\n    console.log(\"Invalid query detected:\", loweredQuery);\n    throw new Error(\"Only SELECT queries are allowed\");\n  }\n\n  // ✅ Remove trailing semicolon and inject LIMIT if needed\n  const trimmedQuery = query.trim().replace(/;$/, \"\");\n  const hasLimit = /\\blimit\\b\\s+\\d+/i.test(loweredQuery);\n  const safeQuery = hasLimit ? trimmedQuery : `${trimmedQuery} LIMIT 100`;\n\n  try {\n    // Use RPC call with anon key only\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_SUPABASE_URL}/rest/v1/rpc/execute_query`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          apikey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n          Authorization: `Bearer ${process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!}`,\n        },\n        body: JSON.stringify({\n          query_text: safeQuery,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to execute query\");\n    }\n\n    const result = await response.json();\n    return result || [];\n  } catch (e: any) {\n    console.error(\"Database query error:\", e);\n    throw new Error(e.message);\n  }\n};\n\nexport const explainQuery = async (input: string, sqlQuery: string) => {\n  \"use server\";\n  try {\n    const result = await generateObject({\n      model: openai(\"gpt-4o\"),\n      schema: z.object({\n        explanations: explanationsSchema,\n      }),\n      system: `You are a SQL (postgres) expert. Your job is to explain to the user the SQL query you wrote to retrieve the data they asked for. The database schema is as follows:\n\n      users (\n        user_id bigint PRIMARY KEY,\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text NOT NULL UNIQUE,\n        phone text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      clients (\n        client_id bigint PRIMARY KEY,\n        advisor_id bigint NOT NULL REFERENCES users(user_id),\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text,\n        phone text,\n        date_of_birth date,\n        address text,\n        city text,\n        state text,\n        postal_code text,\n        country text,\n        risk_profile text DEFAULT 'balanced',\n        financial_goal text,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      portfolios (\n        portfolio_id bigint PRIMARY KEY,\n        client_id bigint NOT NULL REFERENCES clients(client_id),\n        name text NOT NULL,\n        portfolio_type text DEFAULT 'investment',\n        risk_level text DEFAULT 'medium',\n        total_value numeric(18,4) DEFAULT 0.00,\n        inception_date date DEFAULT CURRENT_DATE,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      investments (\n        investment_id bigint PRIMARY KEY,\n        portfolio_id bigint NOT NULL REFERENCES portfolios(portfolio_id),\n        asset_name text NOT NULL,\n        asset_type text NOT NULL,\n        ticker_symbol text,\n        quantity numeric(18,4) NOT NULL DEFAULT 0.00,\n        average_purchase_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        current_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        market_value numeric(18,4) GENERATED ALWAYS AS (quantity * current_price) STORED,\n        allocation_percentage numeric(5,2) DEFAULT 0.00,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      When you explain you must take a section of the query, and then explain it. Each \"section\" should be unique. So in a query like: \"SELECT * FROM portfolios p JOIN clients c ON p.client_id = c.client_id LIMIT 5\", the sections could be \"SELECT *\", \"FROM portfolios p\", \"JOIN clients c ON p.client_id = c.client_id\", \"LIMIT 5\".\n      If a section doesn't have any explanation, include it, but leave the explanation empty.\n      `,\n      prompt: `Explain the SQL query you generated to retrieve the data the user wanted. Assume the user is not an expert in SQL. Break down the query into steps. Be concise.\n\n      User Query:\n      ${input}\n\n      Generated SQL Query:\n      ${sqlQuery}`,\n    });\n    return result.object;\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Failed to generate query\");\n  }\n};\n\nexport const generateChartConfig = async (\n  results: Result[],\n  userQuery: string\n) => {\n  \"use server\";\n  const system = `You are a data visualization expert. Your job is to select the most appropriate chart type for visualizing the given data.\n\n  Chart Type Selection Guidelines:\n  1. Bar Charts (Primary Choice):\n     - Best for comparing quantities across categories\n     - Good for showing rankings (e.g., top performers)\n     - Ideal for time-based data with discrete intervals\n     - Perfect for portfolio values, investment amounts, client counts\n\n  2. Pie Charts:\n     - Use only for showing composition/distribution\n     - Limit to 6-8 segments maximum\n     - Good for percentages that sum to 100%\n     - Examples: asset allocation, risk profile distribution\n\n  3. Line Charts:\n     - Best for continuous time-series data\n     - Good for showing trends over time\n     - Perfect for portfolio performance over time\n     - Use when tracking changes in values\n\n  4. Area Charts:\n     - Similar to line charts but better for cumulative values\n     - Good for showing part-to-whole relationships over time\n     - Use for stacked time-series data\n\n  Always consider:\n  - Data type (categorical, numerical, temporal)\n  - Number of variables\n  - The story you want to tell\n  - User's query intent\n\n  Choose the most appropriate chart type based on these guidelines, but adapt based on the specific data and query context.`;\n\n  try {\n    const { object: config } = await generateObject({\n      model: openai(\"gpt-4o\"),\n      system,\n      prompt: `Given the following data from a SQL query result, generate the chart config that best visualises the data and answers the users query.\n\n      User Query:\n      ${userQuery}\n\n      Data:\n      ${JSON.stringify(results, null, 2)}`,\n      schema: configSchema,\n    });\n\n    const colors: Record<string, string> = {};\n    config.yKeys.forEach((key, index) => {\n      colors[key] = `hsl(var(--chart-${index + 1}))`;\n    });\n\n    const updatedConfig: Config = { ...config, colors };\n    return { config: updatedConfig };\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Failed to generate chart suggestion\");\n  }\n};\n"],"names":[],"mappings":";;;;;;;;IAca;IAoFA;IAqDA;IAuFA","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,qZAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/project-info.tsx"],"sourcesContent":["import { Info } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"./ui/alert\";\n\nexport const ProjectInfo = () => {\n  return (\n    <div className=\"bg-muted p-4 mt-auto\">\n      <Alert className=\"bg-muted text-muted-foreground border-0\">\n        <Info className=\"h-4 w-4 text-primary\" />\n        <AlertDescription>\n          Mercury Genie is your intelligent assistant for portfolio management,\n          enabling natural language queries across your investment data. Explore\n          client portfolios, track investments, and analyze performance with\n          simple conversational questions.\n        </AlertDescription>\n      </Alert>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,MAAM,cAAc;IACzB,qBACE,qZAAC;QAAI,WAAU;kBACb,cAAA,qZAAC,0HAAA,CAAA,QAAK;YAAC,WAAU;;8BACf,qZAAC,sRAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;8BAChB,qZAAC,0HAAA,CAAA,mBAAgB;8BAAC;;;;;;;;;;;;;;;;;AAS1B","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAAA;AAAA;AAEA;AALA;;;;;AAOA,uCAAuC;AACvC,MAAM,SAAS;IAAE,OAAO;IAAI,MAAM;AAAQ;AAgB1C,MAAM,6BAAe,CAAA,GAAA,4WAAA,CAAA,gBAAmB,AAAD,EAA4B;AAEnE,SAAS;IACP,MAAM,UAAU,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA,MAAM,+BAAiB,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAQpC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE;IAChD,MAAM,WAAW,CAAA,GAAA,4WAAA,CAAA,QAAW,AAAD;IAC3B,MAAM,UAAU,CAAC,MAAM,EAAE,MAAM,SAAS,OAAO,CAAC,MAAM,KAAK;IAE3D,qBACE,qZAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACrC,cAAA,qZAAC;YACC,cAAY;YACZ,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ypBACA;YAED,GAAG,KAAK;;8BAET,qZAAC;oBAAW,IAAI;oBAAS,QAAQ;;;;;;8BACjC,qZAAC,sSAAA,CAAA,sBAAqC;8BACnC;;;;;;;;;;;;;;;;;AAKX;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,MAAM,EAAuC;IACrE,MAAM,cAAc,OAAO,OAAO,CAAC,QAAQ,MAAM,CAC/C,CAAC,CAAC,GAAG,OAAO,GAAK,OAAO,KAAK,IAAI,OAAO,KAAK;IAG/C,IAAI,CAAC,YAAY,MAAM,EAAE;QACvB,OAAO;IACT;IAEA,qBACE,qZAAC;QACC,yBAAyB;YACvB,QAAQ,OAAO,OAAO,CAAC,QACpB,GAAG,CACF,CAAC,CAAC,OAAO,OAAO,GAAK,CAAC;AAClC,EAAE,OAAO,aAAa,EAAE,GAAG;AAC3B,EAAE,YACC,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW;oBACrB,MAAM,QACJ,WAAW,KAAK,EAAE,CAAC,MAAuC,IAC1D,WAAW,KAAK;oBAClB,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG;gBACjD,GACC,IAAI,CAAC,MAAM;;AAEd,CAAC,EAEU,IAAI,CAAC;QACV;;;;;;AAGN;AAEA,MAAM,eAAe,0RAAA,CAAA,UAAyB;AAE9C,MAAM,oCAAsB,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAWzC,CACE,EACE,MAAM,EACN,OAAO,EACP,SAAS,EACT,YAAY,KAAK,EACjB,YAAY,KAAK,EACjB,gBAAgB,KAAK,EACrB,KAAK,EACL,cAAc,EACd,cAAc,EACd,SAAS,EACT,KAAK,EACL,OAAO,EACP,QAAQ,EACT,EACD;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,MAAM,eAAe,CAAA,GAAA,4WAAA,CAAA,UAAa,AAAD,EAAE;QACjC,IAAI,aAAa,CAAC,SAAS,QAAQ;YACjC,OAAO;QACT;QAEA,MAAM,CAAC,KAAK,GAAG;QACf,MAAM,MAAM,GAAG,YAAY,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,SAAS;QACjE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;QAC7D,MAAM,QACJ,CAAC,YAAY,OAAO,UAAU,WAC1B,MAAM,CAAC,MAA6B,EAAE,SAAS,QAC/C,YAAY;QAElB,IAAI,gBAAgB;YAClB,qBACE,qZAAC;gBAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;0BAC/B,eAAe,OAAO;;;;;;QAG7B;QAEA,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,qBAAO,qZAAC;YAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;sBAAkB;;;;;;IAC7D,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,CAAC,UAAU,CAAC,SAAS,QAAQ;QAC/B,OAAO;IACT;IAEA,MAAM,YAAY,QAAQ,MAAM,KAAK,KAAK,cAAc;IAExD,qBACE,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0HACA;;YAGD,CAAC,YAAY,eAAe;0BAC7B,qZAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM;oBAClB,MAAM,MAAM,GAAG,WAAW,KAAK,IAAI,IAAI,KAAK,OAAO,IAAI,SAAS;oBAChE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;oBAC7D,MAAM,iBAAiB,SAAS,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,KAAK;oBAE/D,qBACE,qZAAC;wBAEC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uGACA,cAAc,SAAS;kCAGxB,aAAa,MAAM,UAAU,aAAa,KAAK,IAAI,GAClD,UAAU,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,MAAM,OAAO,KAAK,OAAO,kBAE1D;;gCACG,YAAY,qBACX,qZAAC,WAAW,IAAI;;;;2CAEhB,CAAC,+BACC,qZAAC;oCACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;wCACE,eAAe,cAAc;wCAC7B,OAAO,cAAc;wCACrB,mDACE,cAAc;wCAChB,UAAU,aAAa,cAAc;oCACvC;oCAEF,OACE;wCACE,cAAc;wCACd,kBAAkB;oCACpB;;;;;;8CAKR,qZAAC;oCACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4CACA,YAAY,cAAc;;sDAG5B,qZAAC;4CAAI,WAAU;;gDACZ,YAAY,eAAe;8DAC5B,qZAAC;oDAAK,WAAU;8DACb,YAAY,SAAS,KAAK,IAAI;;;;;;;;;;;;wCAGlC,KAAK,KAAK,kBACT,qZAAC;4CAAK,WAAU;sDACb,KAAK,KAAK,CAAC,cAAc;;;;;;;;;;;;;;uBAhD/B,KAAK,OAAO;;;;;gBAwDvB;;;;;;;;;;;;AAIR;AAEF,oBAAoB,WAAW,GAAG;AAElC,MAAM,cAAc,yRAAA,CAAA,SAAwB;AAE5C,MAAM,mCAAqB,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAQxC,CACE,EAAE,SAAS,EAAE,WAAW,KAAK,EAAE,OAAO,EAAE,gBAAgB,QAAQ,EAAE,OAAO,EAAE,EAC3E;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,CAAC,SAAS,QAAQ;QACpB,OAAO;IACT;IAEA,qBACE,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0CACA,kBAAkB,QAAQ,SAAS,QACnC;kBAGD,QAAQ,GAAG,CAAC,CAAC;YACZ,MAAM,MAAM,GAAG,WAAW,KAAK,OAAO,IAAI,SAAS;YACnD,MAAM,aAAa,4BAA4B,QAAQ,MAAM;YAE7D,qBACE,qZAAC;gBAEC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV;;oBAGD,YAAY,QAAQ,CAAC,yBACpB,qZAAC,WAAW,IAAI;;;;6CAEhB,qZAAC;wBACC,WAAU;wBACV,OAAO;4BACL,iBAAiB,KAAK,KAAK;wBAC7B;;;;;;oBAGH,YAAY;;eAfR,KAAK,KAAK;;;;;QAkBrB;;;;;;AAGN;AAEF,mBAAmB,WAAW,GAAG;AAEjC,gDAAgD;AAChD,SAAS,4BACP,MAAmB,EACnB,OAAgB,EAChB,GAAW;IAEX,IAAI,OAAO,YAAY,YAAY,YAAY,MAAM;QACnD,OAAO;IACT;IAEA,MAAM,iBACJ,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK,YAC3B,QAAQ,OAAO,KAAK,OAChB,QAAQ,OAAO,GACf;IAEN,IAAI,iBAAyB;IAE7B,IACE,OAAO,WACP,OAAO,OAAO,CAAC,IAA4B,KAAK,UAChD;QACA,iBAAiB,OAAO,CAAC,IAA4B;IACvD,OAAO,IACL,kBACA,OAAO,kBACP,OAAO,cAAc,CAAC,IAAmC,KAAK,UAC9D;QACA,iBAAiB,cAAc,CAC7B,IACD;IACH;IAEA,OAAO,kBAAkB,SACrB,MAAM,CAAC,eAAe,GACtB,MAAM,CAAC,IAA2B;AACxC","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/lib/rechart-format.ts"],"sourcesContent":["import { Config } from \"./types\";\n\ntype InputDataPoint = Record<string, string | number>;\n\ninterface TransformedDataPoint {\n  [key: string]: string | number | null;\n}\n\ninterface TransformationResult {\n  data: TransformedDataPoint[];\n  xAxisField: string;\n  lineFields: string[];\n}\n\nexport function transformDataForMultiLineChart(\n  data: InputDataPoint[],\n  chartConfig: Config\n): TransformationResult {\n  // console.log(\"Input data:\", data);\n  const {xKey,lineCategories, measurementColumn } = chartConfig;\n\n  const fields = Object.keys(data[0]);\n  // console.log(\"Fields:\", fields);\n\n  const xAxisField = xKey ?? 'year'; // Assuming 'year' is always the x-axis\n  const lineField = fields.find(field => lineCategories?.includes(data[0][field] as string)) || '';\n\n  // console.log(\"X-axis field:\", xAxisField);\n  // console.log(\"Line field:\", lineField);\n\n  const xAxisValues = Array.from(new Set(data.map(item => String(item[xAxisField]))));\n\n  // console.log(\"X-axis values:\", xAxisValues);\n  // console.log(\"Line categories:\", lineCategories);\n\n  const transformedData: TransformedDataPoint[] = xAxisValues.map(xValue => {\n    const dataPoint: TransformedDataPoint = { [xAxisField]: xValue };\n    lineCategories?.forEach(category => {\n      const matchingItem = data.find(item =>\n        String(item[xAxisField]) === xValue && String(item[lineField]) === category\n      );\n      dataPoint[category] = matchingItem ? matchingItem[measurementColumn ?? \"\"] : null;\n    });\n    return dataPoint;\n  });\n\n  transformedData.sort((a, b) => Number(a[xAxisField]) - Number(b[xAxisField]));\n\n  // console.log(\"Transformed data:\", transformedData);\n\n  return {\n    data: transformedData,\n    xAxisField,\n    lineFields: lineCategories ?? []\n  };\n}\n"],"names":[],"mappings":";;;AAcO,SAAS,+BACd,IAAsB,EACtB,WAAmB;IAEnB,oCAAoC;IACpC,MAAM,EAAC,IAAI,EAAC,cAAc,EAAE,iBAAiB,EAAE,GAAG;IAElD,MAAM,SAAS,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;IAClC,kCAAkC;IAElC,MAAM,aAAa,QAAQ,QAAQ,uCAAuC;IAC1E,MAAM,YAAY,OAAO,IAAI,CAAC,CAAA,QAAS,gBAAgB,SAAS,IAAI,CAAC,EAAE,CAAC,MAAM,MAAgB;IAE9F,4CAA4C;IAC5C,yCAAyC;IAEzC,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAA,OAAQ,OAAO,IAAI,CAAC,WAAW;IAE/E,8CAA8C;IAC9C,mDAAmD;IAEnD,MAAM,kBAA0C,YAAY,GAAG,CAAC,CAAA;QAC9D,MAAM,YAAkC;YAAE,CAAC,WAAW,EAAE;QAAO;QAC/D,gBAAgB,QAAQ,CAAA;YACtB,MAAM,eAAe,KAAK,IAAI,CAAC,CAAA,OAC7B,OAAO,IAAI,CAAC,WAAW,MAAM,UAAU,OAAO,IAAI,CAAC,UAAU,MAAM;YAErE,SAAS,CAAC,SAAS,GAAG,eAAe,YAAY,CAAC,qBAAqB,GAAG,GAAG;QAC/E;QACA,OAAO;IACT;IAEA,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAM,OAAO,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,WAAW;IAE3E,qDAAqD;IAErD,OAAO;QACL,MAAM;QACN;QACA,YAAY,kBAAkB,EAAE;IAClC;AACF","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/dynamic-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  Area,\n  AreaChart,\n  Pie,\n  PieChart,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Config, Result } from \"@/lib/types\";\nimport { Label } from \"recharts\";\nimport { transformDataForMultiLineChart } from \"@/lib/rechart-format\";\n\nfunction toTitleCase(str: string): string {\n  return str\n    .split(\"_\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}\nconst colors = [\n  \"hsl(var(--chart-1))\",\n  \"hsl(var(--chart-2))\",\n  \"hsl(var(--chart-3))\",\n  \"hsl(var(--chart-4))\",\n  \"hsl(var(--chart-5))\",\n  \"hsl(var(--chart-6))\",\n  \"hsl(var(--chart-7))\",\n  \"hsl(var(--chart-8))\",\n];\n\nexport function DynamicChart({\n  chartData,\n  chartConfig,\n}: {\n  chartData: Result[];\n  chartConfig: Config;\n}) {\n  const renderChart = () => {\n    if (!chartData || !chartConfig) return <div>No chart data</div>;\n    const parsedChartData = chartData.map((item) => {\n      const parsedItem: { [key: string]: any } = {};\n      for (const [key, value] of Object.entries(item)) {\n        parsedItem[key] = isNaN(Number(value)) ? value : Number(value);\n      }\n      return parsedItem;\n    });\n\n    chartData = parsedChartData;\n\n    const processChartData = (data: Result[], chartType: string) => {\n      if (chartType === \"bar\" || chartType === \"pie\") {\n        if (data.length <= 8) {\n          return data;\n        }\n\n        const subset = data.slice(0, 20);\n        return subset;\n      }\n      return data;\n    };\n\n    chartData = processChartData(chartData, chartConfig.type);\n    // console.log({ chartData, chartConfig });\n\n    switch (chartConfig.type) {\n      case \"bar\":\n        return (\n          <BarChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey={chartConfig.xKey}>\n              <Label\n                value={toTitleCase(chartConfig.xKey)}\n                offset={0}\n                position=\"insideBottom\"\n              />\n            </XAxis>\n            <YAxis>\n              <Label\n                value={toTitleCase(chartConfig.yKeys[0])}\n                angle={-90}\n                position=\"insideLeft\"\n              />\n            </YAxis>\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n            {chartConfig.yKeys.map((key, index) => (\n              <Bar\n                key={key}\n                dataKey={key}\n                fill={colors[index % colors.length]}\n              />\n            ))}\n          </BarChart>\n        );\n      case \"line\":\n        const { data, xAxisField, lineFields } = transformDataForMultiLineChart(\n          chartData,\n          chartConfig,\n        );\n        const useTransformedData =\n          chartConfig.multipleLines &&\n          chartConfig.measurementColumn &&\n          chartConfig.yKeys.includes(chartConfig.measurementColumn);\n        // console.log(useTransformedData, \"useTransformedData\");\n        // const useTransformedData = false;\n        return (\n          <LineChart data={useTransformedData ? data : chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey={useTransformedData ? chartConfig.xKey : chartConfig.xKey}\n            >\n              <Label\n                value={toTitleCase(\n                  useTransformedData ? xAxisField : chartConfig.xKey,\n                )}\n                offset={0}\n                position=\"insideBottom\"\n              />\n            </XAxis>\n            <YAxis>\n              <Label\n                value={toTitleCase(chartConfig.yKeys[0])}\n                angle={-90}\n                position=\"insideLeft\"\n              />\n            </YAxis>\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n            {useTransformedData\n              ? lineFields.map((key, index) => (\n                  <Line\n                    key={key}\n                    type=\"monotone\"\n                    dataKey={key}\n                    stroke={colors[index % colors.length]}\n                  />\n                ))\n              : chartConfig.yKeys.map((key, index) => (\n                  <Line\n                    key={key}\n                    type=\"monotone\"\n                    dataKey={key}\n                    stroke={colors[index % colors.length]}\n                  />\n                ))}\n          </LineChart>\n        );\n      case \"area\":\n        return (\n          <AreaChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey={chartConfig.xKey} />\n            <YAxis />\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n            {chartConfig.yKeys.map((key, index) => (\n              <Area\n                key={key}\n                type=\"monotone\"\n                dataKey={key}\n                fill={colors[index % colors.length]}\n                stroke={colors[index % colors.length]}\n              />\n            ))}\n          </AreaChart>\n        );\n      case \"pie\":\n        return (\n          <PieChart>\n            <Pie\n              data={chartData}\n              dataKey={chartConfig.yKeys[0]}\n              nameKey={chartConfig.xKey}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={120}\n            >\n              {chartData.map((_, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={colors[index % colors.length]}\n                />\n              ))}\n            </Pie>\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n          </PieChart>\n        );\n      default:\n        return <div>Unsupported chart type: {chartConfig.type}</div>;\n    }\n  };\n\n  return (\n    <div className=\"w-full flex flex-col justify-center items-center\">\n      <h2 className=\"text-lg font-bold mb-2\">{chartConfig.title}</h2>\n      {chartConfig && chartData.length > 0 && (\n        <ChartContainer\n          config={chartConfig.yKeys.reduce(\n            (acc, key, index) => {\n              acc[key] = {\n                label: key,\n                color: colors[index % colors.length],\n              };\n              return acc;\n            },\n            {} as Record<string, { label: string; color: string }>,\n          )}\n          className=\"h-[320px] w-full\"\n        >\n          {renderChart()}\n        </ChartContainer>\n      )}\n      <div className=\"w-full\">\n        <p className=\"mt-4 text-sm\">{chartConfig.description}</p>\n        <p className=\"mt-4 text-sm\">{chartConfig.takeaway}</p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 913, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/skeleton-card.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\";\n\nexport function SkeletonCard() {\n  return (\n    <div className=\"flex flex-col space-y-2 w-full\">\n    <div className=\"w-full flex items-center justify-center\">\n    <Skeleton className=\"h-[28px] w-72 rounded-xl\" />\n    </div>\n    <Skeleton className=\"h-[300px] w-full rounded-xl\" />\n      <div className=\"w-full flex justify-center items-center\">\n        <Skeleton className=\"h-4 w-20\" />\n        </div>\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-[450px]\" />\n      </div>\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-[350px]\" />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,qZAAC;QAAI,WAAU;;0BACf,qZAAC;gBAAI,WAAU;0BACf,cAAA,qZAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAEpB,qZAAC,6HAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;0BAClB,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAEtB,qZAAC;gBAAI,WAAU;;kCACb,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCACpB,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,qZAAC;gBAAI,WAAU;;kCACb,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCACpB,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI5B","debugId":null}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <table\n    ref={ref}\n    className={cn(\"w-full caption-bottom text-sm\", className)}\n    {...props}\n  />\n));\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n));\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n));\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b border-border transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n));\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,oXAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,oXAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,oXAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,oXAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,oXAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,oXAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,oXAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1174, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/results.tsx"],"sourcesContent":["import { Config, Result, Unicorn } from \"@/lib/types\";\nimport { DynamicChart } from \"./dynamic-chart\";\nimport { SkeletonCard } from \"./skeleton-card\";\nimport {\n  TableHeader,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Table,\n} from \"./ui/table\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\n\nexport const Results = ({\n  results,\n  columns,\n  chartConfig,\n}: {\n  results: Result[];\n  columns: string[];\n  chartConfig: Config | null;\n}) => {\n  const formatColumnTitle = (title: string) => {\n    return title\n      .split(\"_\")\n      .map((word, index) =>\n        index === 0 ? word.charAt(0).toUpperCase() + word.slice(1) : word,\n      )\n      .join(\" \");\n  };\n\n  const formatCellValue = (column: string, value: any) => {\n    if (column.toLowerCase().includes(\"valuation\")) {\n      const parsedValue = parseFloat(value);\n      if (isNaN(parsedValue)) {\n        return \"\";\n      }\n      const formattedValue = parsedValue.toFixed(2);\n      const trimmedValue = formattedValue.replace(/\\.?0+$/, \"\");\n      return `$${trimmedValue}B`;\n    }\n    if (column.toLowerCase().includes(\"rate\")) {\n      const parsedValue = parseFloat(value);\n      if (isNaN(parsedValue)) {\n        return \"\";\n      }\n      const percentage = (parsedValue * 100).toFixed(2);\n      return `${percentage}%`;\n    }\n    if (value instanceof Date) {\n      return value.toLocaleDateString();\n    }\n    return String(value);\n  };\n\n  return (\n    <div className=\"flex-grow flex flex-col\">\n      <Tabs defaultValue=\"table\" className=\"w-full flex-grow flex flex-col\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"table\">Table</TabsTrigger>\n          <TabsTrigger\n            value=\"charts\"\n            disabled={\n              Object.keys(results[0] || {}).length <= 1 || results.length < 2\n            }\n          >\n            Chart\n          </TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"table\" className=\"flex-grow\">\n          <div className=\"sm:min-h-[10px] relative\">\n            <Table className=\"min-w-full divide-y divide-border\">\n              <TableHeader className=\"bg-secondary sticky top-0 shadow-sm\">\n                <TableRow>\n                  {columns.map((column, index) => (\n                    <TableHead\n                      key={index}\n                      className=\"px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\"\n                    >\n                      {formatColumnTitle(column)}\n                    </TableHead>\n                  ))}\n                </TableRow>\n              </TableHeader>\n              <TableBody className=\"bg-card divide-y divide-border\">\n                {results.map((company, index) => (\n                  <TableRow key={index} className=\"hover:bg-muted\">\n                    {columns.map((column, cellIndex) => (\n                      <TableCell\n                        key={cellIndex}\n                        className=\"px-6 py-4 whitespace-nowrap text-sm text-foreground\"\n                      >\n                        {formatCellValue(\n                          column,\n                          company[column as keyof Unicorn],\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </TabsContent>\n        <TabsContent value=\"charts\" className=\"flex-grow overflow-auto\">\n          <div className=\"mt-4\">\n            {chartConfig && results.length > 0 ? (\n              <DynamicChart chartData={results} chartConfig={chartConfig} />\n            ) : (\n              <SkeletonCard />\n            )}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAQA;;;;;;AAEO,MAAM,UAAU,CAAC,EACtB,OAAO,EACP,OAAO,EACP,WAAW,EAKZ;IACC,MAAM,oBAAoB,CAAC;QACzB,OAAO,MACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,MAAM,QACV,UAAU,IAAI,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,KAAK,MAE9D,IAAI,CAAC;IACV;IAEA,MAAM,kBAAkB,CAAC,QAAgB;QACvC,IAAI,OAAO,WAAW,GAAG,QAAQ,CAAC,cAAc;YAC9C,MAAM,cAAc,WAAW;YAC/B,IAAI,MAAM,cAAc;gBACtB,OAAO;YACT;YACA,MAAM,iBAAiB,YAAY,OAAO,CAAC;YAC3C,MAAM,eAAe,eAAe,OAAO,CAAC,UAAU;YACtD,OAAO,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;QAC5B;QACA,IAAI,OAAO,WAAW,GAAG,QAAQ,CAAC,SAAS;YACzC,MAAM,cAAc,WAAW;YAC/B,IAAI,MAAM,cAAc;gBACtB,OAAO;YACT;YACA,MAAM,aAAa,CAAC,cAAc,GAAG,EAAE,OAAO,CAAC;YAC/C,OAAO,GAAG,WAAW,CAAC,CAAC;QACzB;QACA,IAAI,iBAAiB,MAAM;YACzB,OAAO,MAAM,kBAAkB;QACjC;QACA,OAAO,OAAO;IAChB;IAEA,qBACE,qZAAC;QAAI,WAAU;kBACb,cAAA,qZAAC,yHAAA,CAAA,OAAI;YAAC,cAAa;YAAQ,WAAU;;8BACnC,qZAAC,yHAAA,CAAA,WAAQ;oBAAC,WAAU;;sCAClB,qZAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;sCAAQ;;;;;;sCAC3B,qZAAC,yHAAA,CAAA,cAAW;4BACV,OAAM;4BACN,UACE,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,KAAK,QAAQ,MAAM,GAAG;sCAEjE;;;;;;;;;;;;8BAIH,qZAAC,yHAAA,CAAA,cAAW;oBAAC,OAAM;oBAAQ,WAAU;8BACnC,cAAA,qZAAC;wBAAI,WAAU;kCACb,cAAA,qZAAC,0HAAA,CAAA,QAAK;4BAAC,WAAU;;8CACf,qZAAC,0HAAA,CAAA,cAAW;oCAAC,WAAU;8CACrB,cAAA,qZAAC,0HAAA,CAAA,WAAQ;kDACN,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,qZAAC,0HAAA,CAAA,YAAS;gDAER,WAAU;0DAET,kBAAkB;+CAHd;;;;;;;;;;;;;;;8CAQb,qZAAC,0HAAA,CAAA,YAAS;oCAAC,WAAU;8CAClB,QAAQ,GAAG,CAAC,CAAC,SAAS,sBACrB,qZAAC,0HAAA,CAAA,WAAQ;4CAAa,WAAU;sDAC7B,QAAQ,GAAG,CAAC,CAAC,QAAQ,0BACpB,qZAAC,0HAAA,CAAA,YAAS;oDAER,WAAU;8DAET,gBACC,QACA,OAAO,CAAC,OAAwB;mDAL7B;;;;;2CAHI;;;;;;;;;;;;;;;;;;;;;;;;;;8BAkBzB,qZAAC,yHAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,WAAU;8BACpC,cAAA,qZAAC;wBAAI,WAAU;kCACZ,eAAe,QAAQ,MAAM,GAAG,kBAC/B,qZAAC,+HAAA,CAAA,eAAY;4BAAC,WAAW;4BAAS,aAAa;;;;;iDAE/C,qZAAC,+HAAA,CAAA,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3B","debugId":null}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1418, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/suggested-queries.tsx"],"sourcesContent":["import { motion } from \"framer-motion\";\nimport { Button } from \"./ui/button\";\n\nexport const SuggestedQueries = ({\n  handleSuggestionClick,\n}: {\n  handleSuggestionClick: (suggestion: string) => void;\n}) => {\n  const suggestionQueries = [\n    {\n      desktop: \"Show me top 5 portfolios by total value\",\n      mobile: \"Top portfolios\",\n    },\n    {\n      desktop: \"List top 3 clients with highest portfolio values\",\n      mobile: \"Top clients\",\n    },\n    {\n      desktop: \"Show distribution of risk profiles across clients\",\n      mobile: \"Risk profiles\",\n    },\n    {\n      desktop: \"Compare average portfolio values by risk level\",\n      mobile: \"Risk vs Value\",\n    },\n    {\n      desktop: \"Show total investments by asset type\",\n      mobile: \"Asset types\",\n    },\n    {\n      desktop: \"List portfolios created in the last 30 days\",\n      mobile: \"New portfolios\",\n    },\n    {\n      desktop: \"Show clients grouped by their financial goals\",\n      mobile: \"Goals\",\n    },\n    {\n      desktop: \"Compare market value across different portfolio types\",\n      mobile: \"Portfolio types\",\n    },\n    {\n      desktop: \"Show average investment allocation by asset type\",\n      mobile: \"Allocations\",\n    },\n    {\n      desktop: \"List clients with portfolios above $1M in value\",\n      mobile: \"High value\",\n    },\n    {\n      desktop: \"Show investment distribution by risk level\",\n      mobile: \"Risk dist.\",\n    },\n  ];\n\n  return (\n    <motion.div\n      key=\"suggestions\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      layout\n      exit={{ opacity: 0 }}\n      className=\"h-full overflow-y-auto\"\n    >\n      <h2 className=\"text-lg sm:text-xl font-semibold text-foreground mb-4\">\n        Try these queries:\n      </h2>\n      <div className=\"flex flex-wrap gap-2\">\n        {suggestionQueries.map((suggestion, index) => (\n          <Button\n            key={index}\n            className={index > 5 ? \"hidden sm:inline-block\" : \"\"}\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => handleSuggestionClick(suggestion.desktop)}\n          >\n            <span className=\"sm:hidden\">{suggestion.mobile}</span>\n            <span className=\"hidden sm:inline\">{suggestion.desktop}</span>\n          </Button>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,MAAM,mBAAmB,CAAC,EAC/B,qBAAqB,EAGtB;IACC,MAAM,oBAAoB;QACxB;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;QACA;YACE,SAAS;YACT,QAAQ;QACV;KACD;IAED,qBACE,qZAAC,sUAAA,CAAA,SAAM,CAAC,GAAG;QAET,SAAS;YAAE,SAAS;QAAE;QACtB,SAAS;YAAE,SAAS;QAAE;QACtB,MAAM;QACN,MAAM;YAAE,SAAS;QAAE;QACnB,WAAU;;0BAEV,qZAAC;gBAAG,WAAU;0BAAwD;;;;;;0BAGtE,qZAAC;gBAAI,WAAU;0BACZ,kBAAkB,GAAG,CAAC,CAAC,YAAY,sBAClC,qZAAC,2HAAA,CAAA,SAAM;wBAEL,WAAW,QAAQ,IAAI,2BAA2B;wBAClD,MAAK;wBACL,SAAQ;wBACR,SAAS,IAAM,sBAAsB,WAAW,OAAO;;0CAEvD,qZAAC;gCAAK,WAAU;0CAAa,WAAW,MAAM;;;;;;0CAC9C,qZAAC;gCAAK,WAAU;0CAAoB,WAAW,OAAO;;;;;;;uBAPjD;;;;;;;;;;;OAbP;;;;;AA0BV","debugId":null}},
    {"offset": {"line": 1543, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,qZAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1572, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/search.tsx"],"sourcesContent":["import { Search as SearchIcon } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\n\nexport const Search = ({\n  handleSubmit,\n  inputValue,\n  setInputValue,\n  submitted,\n  handleClear,\n}: {\n  handleSubmit: () => Promise<void>;\n  inputValue: string;\n  setInputValue: React.Dispatch<React.SetStateAction<string>>;\n  submitted: boolean;\n  handleClear: () => void;\n}) => {\n  return (\n    <form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        await handleSubmit();\n      }}\n      className=\"mb-6\"\n    >\n      <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n        <div className=\"relative flex-grow\">\n          <Input\n            type=\"text\"\n            placeholder=\"Ask about portfolios, clients & investments...\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            className=\"pr-10 text-base\"\n          />\n          <SearchIcon className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n        </div>\n        <div className=\"flex sm:flex-row items-center justify-center gap-2\">\n          {submitted ? (\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleClear}\n              className=\"w-full sm:w-auto\"\n            >\n              Clear\n            </Button>\n          ) : (\n            <Button type=\"submit\" className=\"w-full sm:w-auto\">\n              Send\n            </Button>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,SAAS,CAAC,EACrB,YAAY,EACZ,UAAU,EACV,aAAa,EACb,SAAS,EACT,WAAW,EAOZ;IACC,qBACE,qZAAC;QACC,UAAU,OAAO;YACf,EAAE,cAAc;YAChB,MAAM;QACR;QACA,WAAU;kBAEV,cAAA,qZAAC;YAAI,WAAU;;8BACb,qZAAC;oBAAI,WAAU;;sCACb,qZAAC,0HAAA,CAAA,QAAK;4BACJ,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4BAC7C,WAAU;;;;;;sCAEZ,qZAAC,0RAAA,CAAA,SAAU;4BAAC,WAAU;;;;;;;;;;;;8BAExB,qZAAC;oBAAI,WAAU;8BACZ,0BACC,qZAAC,2HAAA,CAAA,SAAM;wBACL,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,WAAU;kCACX;;;;;6CAID,qZAAC,2HAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,WAAU;kCAAmB;;;;;;;;;;;;;;;;;;;;;;AAQ/D","debugId":null}},
    {"offset": {"line": 1664, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/components/header.tsx"],"sourcesContent":["import { Moon, Sun, Sparkles, LineChart } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { useTheme } from \"next-themes\";\n\nexport const Header = ({ handleClear }: { handleClear: () => void }) => {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <div className=\"flex items-center justify-between mb-6\">\n      <h1\n        className=\"text-2xl sm:text-3xl font-bold text-foreground flex items-center gap-2 cursor-pointer\"\n        onClick={() => handleClear()}\n      >\n        Mercury Genie <Sparkles className=\"h-6 w-6 text-primary\" />\n      </h1>\n      <div className=\"flex items-center justify-center space-x-2\">\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n        >\n          {theme === \"dark\" ? (\n            <Moon className=\"h-5 w-5\" />\n          ) : (\n            <Sun className=\"h-5 w-5\" />\n          )}\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAEO,MAAM,SAAS,CAAC,EAAE,WAAW,EAA+B;IACjE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IAEnC,qBACE,qZAAC;QAAI,WAAU;;0BACb,qZAAC;gBACC,WAAU;gBACV,SAAS,IAAM;;oBAChB;kCACe,qZAAC,8RAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAEpC,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC,2HAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,SAAS,IAAM,SAAS,UAAU,UAAU,SAAS;;wBAEpD,UAAU,uBACT,qZAAC,sRAAA,CAAA,OAAI;4BAAC,WAAU;;;;;iDAEhB,qZAAC,oRAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;sCAEjB,qZAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;;;;;;;AAKpC","debugId":null}},
    {"offset": {"line": 1752, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-ai-genie/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  generateChartConfig,\n  generateQuery,\n  runGenerateSQLQuery,\n} from \"./actions\";\nimport { Config, Result } from \"@/lib/types\";\nimport { Loader2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { ProjectInfo } from \"@/components/project-info\";\nimport { Results } from \"@/components/results\";\nimport { SuggestedQueries } from \"@/components/suggested-queries\";\nimport { QueryViewer } from \"@/components/query-viewer\";\nimport { Search } from \"@/components/search\";\nimport { Header } from \"@/components/header\";\n\nexport default function Page() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [results, setResults] = useState<Result[]>([]);\n  const [columns, setColumns] = useState<string[]>([]);\n  const [activeQuery, setActiveQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loadingStep, setLoadingStep] = useState(1);\n  const [chartConfig, setChartConfig] = useState<Config | null>(null);\n\n  const handleSubmit = async (suggestion?: string) => {\n    const question = suggestion ?? inputValue;\n    if (inputValue.length === 0 && !suggestion) return;\n    clearExistingData();\n    if (question.trim()) {\n      setSubmitted(true);\n    }\n    setLoading(true);\n    setLoadingStep(1);\n    setActiveQuery(\"\");\n    try {\n      const query = await generateQuery(question);\n      if (query === undefined) {\n        toast.error(\"An error occurred. Please try again.\");\n        setLoading(false);\n        return;\n      }\n      setActiveQuery(query);\n      setLoadingStep(2);\n      const companies = await runGenerateSQLQuery(query);\n      const columns = companies.length > 0 ? Object.keys(companies[0]) : [];\n      setResults(companies);\n      setColumns(columns);\n      setLoading(false);\n      const generation = await generateChartConfig(companies, question);\n      setChartConfig(generation.config);\n    } catch (e) {\n      toast.error(\"An error occurred. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  const handleSuggestionClick = async (suggestion: string) => {\n    setInputValue(suggestion);\n    try {\n      await handleSubmit(suggestion);\n    } catch (e) {\n      toast.error(\"An error occurred. Please try again.\");\n    }\n  };\n\n  const clearExistingData = () => {\n    setActiveQuery(\"\");\n    setResults([]);\n    setColumns([]);\n    setChartConfig(null);\n  };\n\n  const handleClear = () => {\n    setSubmitted(false);\n    setInputValue(\"\");\n    clearExistingData();\n  };\n\n  return (\n    <div className=\"bg-neutral-50 dark:bg-neutral-900 flex items-start justify-center p-0 sm:p-8\">\n      <div className=\"w-full max-w-4xl min-h-dvh sm:min-h-0 flex flex-col \">\n        <motion.div\n          className=\"bg-card rounded-xl sm:border sm:border-border flex-grow flex flex-col\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5, ease: \"easeOut\" }}\n        >\n          <div className=\"p-6 sm:p-8 flex flex-col flex-grow\">\n            <Header handleClear={handleClear} />\n            <Search\n              handleClear={handleClear}\n              handleSubmit={handleSubmit}\n              inputValue={inputValue}\n              setInputValue={setInputValue}\n              submitted={submitted}\n            />\n            <div\n              id=\"main-container\"\n              className=\"flex-grow flex flex-col sm:min-h-[420px]\"\n            >\n              <div className=\"flex-grow h-full\">\n                <AnimatePresence mode=\"wait\">\n                  {!submitted ? (\n                    <SuggestedQueries\n                      handleSuggestionClick={handleSuggestionClick}\n                    />\n                  ) : (\n                    <motion.div\n                      key=\"results\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      exit={{ opacity: 0 }}\n                      layout\n                      className=\"sm:h-full min-h-[400px] flex flex-col\"\n                    >\n                      {/* \n                        QueryViewer is temporarily disabled to hide SQL query display from users.\n                        This component shows the generated SQL query and its explanation when hovering over query parts.\n                        To re-enable, simply remove these comment markers.\n                        Purpose: Provides transparency into how the AI generates queries from natural language.\n                      */}\n                      {/* {activeQuery.length > 0 && (\n                        <QueryViewer\n                          activeQuery={activeQuery}\n                          inputValue={inputValue}\n                        />\n                      )} */}\n                      {loading ? (\n                        <div className=\"relative flex-grow flex items-center justify-center\">\n                          <div className=\"flex flex-col items-center justify-center space-y-4\">\n                            <Loader2 className=\"h-12 w-12 animate-spin text-muted-foreground\" />\n                            <p className=\"text-foreground\">\n                              {loadingStep === 1\n                                ? \"Analyzing portfolio data...\"\n                                : \"Generating investment insights...\"}\n                            </p>\n                          </div>\n                        </div>\n                      ) : results.length === 0 ? (\n                        <div className=\"flex-grow flex items-center justify-center\">\n                          <p className=\"text-center text-muted-foreground\">\n                            No results found.\n                          </p>\n                        </div>\n                      ) : (\n                        <Results\n                          results={results}\n                          chartConfig={chartConfig}\n                          columns={columns}\n                        />\n                      )}\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n            </div>\n          </div>\n          <ProjectInfo />\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}