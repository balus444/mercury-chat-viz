{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { Config, configSchema, explanationsSchema, Result } from \"@/lib/types\";\nimport { openai } from \"@ai-sdk/openai\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport { generateObject } from \"ai\";\nimport { z } from \"zod\";\n\n// Initialize Supabase client\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport const generateQuery = async (input: string) => {\n  \"use server\";\n  try {\n    const result = await generateObject({\n      model: openai(\"gpt-4o\"),\n      system: `You are a SQL (postgres) and data visualization expert specializing in investment portfolio analysis. Your job is to help generate insightful queries about investment portfolios and client holdings.\n\n      IMPORTANT RULES:\n      1. ONLY generate SELECT queries - no other operations are allowed\n      2. When searching for names, use ILIKE for case-insensitive matching\n      3. Always use proper table joins with aliases\n      4. Include appropriate WHERE clauses for filtering\n      5. Always include ORDER BY and LIMIT clauses\n      6. For text searches, use pattern matching with ILIKE and '%' wildcards\n      7. For aggregations, always include GROUP BY and appropriate HAVING clauses\n      8. When counting clients or portfolios, use COUNT(DISTINCT client_id) or COUNT(DISTINCT portfolio_id)\n\n      COMMON INVESTMENT ANALYSIS PATTERNS:\n\n      1. Popular Investments Analysis:\n      SELECT \n        i.asset_name,\n        i.ticker_symbol,\n        COUNT(DISTINCT c.client_id) as number_of_clients,\n        SUM(i.market_value) as total_market_value,\n        AVG(i.allocation_percentage) as avg_allocation\n      FROM investments i\n      JOIN portfolios p ON p.portfolio_id = i.portfolio_id\n      JOIN clients c ON c.client_id = p.client_id\n      GROUP BY i.asset_name, i.ticker_symbol\n      ORDER BY number_of_clients DESC\n      LIMIT 10;\n\n      2. Portfolio Holdings Analysis:\n      SELECT \n        p.name as portfolio_name,\n        c.first_name || ' ' || c.last_name as client_name,\n        i.asset_name,\n        i.ticker_symbol,\n        i.quantity,\n        i.market_value,\n        i.allocation_percentage\n      FROM portfolios p\n      JOIN clients c ON c.client_id = p.client_id\n      JOIN investments i ON i.portfolio_id = p.portfolio_id\n      WHERE i.market_value > 0\n      ORDER BY i.market_value DESC\n      LIMIT 20;\n\n      3. Asset Type Distribution:\n      SELECT \n        i.asset_type,\n        COUNT(DISTINCT p.portfolio_id) as number_of_portfolios,\n        COUNT(DISTINCT c.client_id) as number_of_clients,\n        SUM(i.market_value) as total_market_value,\n        AVG(i.allocation_percentage) as avg_allocation\n      FROM investments i\n      JOIN portfolios p ON p.portfolio_id = i.portfolio_id\n      JOIN clients c ON c.client_id = p.client_id\n      GROUP BY i.asset_type\n      ORDER BY total_market_value DESC;\n\n      The database schema is as follows:\n\n      users (\n        user_id bigint PRIMARY KEY,\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text NOT NULL UNIQUE,\n        phone text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      clients (\n        client_id bigint PRIMARY KEY,\n        advisor_id bigint NOT NULL REFERENCES users(user_id),\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text,\n        phone text,\n        date_of_birth date,\n        address text,\n        city text,\n        state text,\n        postal_code text,\n        country text,\n        risk_profile text DEFAULT 'balanced',\n        financial_goal text,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      portfolios (\n        portfolio_id bigint PRIMARY KEY,\n        client_id bigint NOT NULL REFERENCES clients(client_id),\n        name text NOT NULL,\n        portfolio_type text DEFAULT 'investment',\n        risk_level text DEFAULT 'medium',\n        total_value numeric(18,4) DEFAULT 0.00,\n        inception_date date DEFAULT CURRENT_DATE,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      investments (\n        investment_id bigint PRIMARY KEY,\n        portfolio_id bigint NOT NULL REFERENCES portfolios(portfolio_id),\n        asset_name text NOT NULL,\n        asset_type text NOT NULL,\n        ticker_symbol text,\n        quantity numeric(18,4) NOT NULL DEFAULT 0.00,\n        average_purchase_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        current_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        market_value numeric(18,4) GENERATED ALWAYS AS (quantity * current_price) STORED,\n        allocation_percentage numeric(5,2) DEFAULT 0.00,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n      `,\n      prompt: `Generate a SELECT query to analyze: ${input}. Remember to use appropriate aggregations and grouping for investment analysis.`,\n      schema: z.object({\n        query: z.string(),\n      }),\n    });\n    return result.object.query;\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Failed to generate query\");\n  }\n};\n\nexport const runGenerateSQLQuery = async (query: string) => {\n  \"use server\";\n\n  const loweredQuery = query.trim().toLowerCase();\n\n  // ✅ Only allow SELECTs\n  if (\n    !loweredQuery.startsWith(\"select\") ||\n    /drop|delete|insert|update|alter|truncate|create|grant|revoke/.test(\n      loweredQuery\n    )\n  ) {\n    throw new Error(\"Only SELECT queries are allowed\");\n  }\n\n  // ✅ Remove trailing semicolon and inject LIMIT if needed\n  const trimmedQuery = query.trim().replace(/;$/, \"\");\n  const hasLimit = /\\blimit\\b\\s+\\d+/i.test(loweredQuery);\n  const safeQuery = hasLimit ? trimmedQuery : `${trimmedQuery} LIMIT 100`;\n\n  try {\n    // Use RPC call with anon key only\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_SUPABASE_URL}/rest/v1/rpc/execute_query`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          apikey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n          Authorization: `Bearer ${process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!}`,\n        },\n        body: JSON.stringify({\n          query_text: safeQuery,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Failed to execute query\");\n    }\n\n    const result = await response.json();\n    return result || [];\n  } catch (e: any) {\n    console.error(\"Database query error:\", e);\n    throw new Error(e.message);\n  }\n};\n\nexport const explainQuery = async (input: string, sqlQuery: string) => {\n  \"use server\";\n  try {\n    const result = await generateObject({\n      model: openai(\"gpt-4o\"),\n      schema: z.object({\n        explanations: explanationsSchema,\n      }),\n      system: `You are a SQL (postgres) expert. Your job is to explain to the user the SQL query you wrote to retrieve the data they asked for. The database schema is as follows:\n\n      users (\n        user_id bigint PRIMARY KEY,\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text NOT NULL UNIQUE,\n        phone text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      clients (\n        client_id bigint PRIMARY KEY,\n        advisor_id bigint NOT NULL REFERENCES users(user_id),\n        first_name text NOT NULL,\n        last_name text NOT NULL,\n        email text,\n        phone text,\n        date_of_birth date,\n        address text,\n        city text,\n        state text,\n        postal_code text,\n        country text,\n        risk_profile text DEFAULT 'balanced',\n        financial_goal text,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      portfolios (\n        portfolio_id bigint PRIMARY KEY,\n        client_id bigint NOT NULL REFERENCES clients(client_id),\n        name text NOT NULL,\n        portfolio_type text DEFAULT 'investment',\n        risk_level text DEFAULT 'medium',\n        total_value numeric(18,4) DEFAULT 0.00,\n        inception_date date DEFAULT CURRENT_DATE,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      investments (\n        investment_id bigint PRIMARY KEY,\n        portfolio_id bigint NOT NULL REFERENCES portfolios(portfolio_id),\n        asset_name text NOT NULL,\n        asset_type text NOT NULL,\n        ticker_symbol text,\n        quantity numeric(18,4) NOT NULL DEFAULT 0.00,\n        average_purchase_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        current_price numeric(18,4) NOT NULL DEFAULT 0.00,\n        market_value numeric(18,4) GENERATED ALWAYS AS (quantity * current_price) STORED,\n        allocation_percentage numeric(5,2) DEFAULT 0.00,\n        notes text,\n        created_at timestamp with time zone,\n        updated_at timestamp with time zone\n      );\n\n      When you explain you must take a section of the query, and then explain it. Each \"section\" should be unique. So in a query like: \"SELECT * FROM portfolios p JOIN clients c ON p.client_id = c.client_id LIMIT 5\", the sections could be \"SELECT *\", \"FROM portfolios p\", \"JOIN clients c ON p.client_id = c.client_id\", \"LIMIT 5\".\n      If a section doesn't have any explanation, include it, but leave the explanation empty.\n      `,\n      prompt: `Explain the SQL query you generated to retrieve the data the user wanted. Assume the user is not an expert in SQL. Break down the query into steps. Be concise.\n\n      User Query:\n      ${input}\n\n      Generated SQL Query:\n      ${sqlQuery}`,\n    });\n    return result.object;\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Failed to generate query\");\n  }\n};\n\nexport const generateChartConfig = async (\n  results: Result[],\n  userQuery: string\n) => {\n  \"use server\";\n  const system = `You are a data visualization expert. Your job is to select the most appropriate chart type for visualizing the given data.\n\n  Chart Type Selection Guidelines:\n  1. Bar Charts (Primary Choice):\n     - Best for comparing quantities across categories\n     - Good for showing rankings (e.g., top performers)\n     - Ideal for time-based data with discrete intervals\n     - Perfect for portfolio values, investment amounts, client counts\n\n  2. Pie Charts:\n     - Use only for showing composition/distribution\n     - Limit to 6-8 segments maximum\n     - Good for percentages that sum to 100%\n     - Examples: asset allocation, risk profile distribution\n\n  3. Line Charts:\n     - Best for continuous time-series data\n     - Good for showing trends over time\n     - Perfect for portfolio performance over time\n     - Use when tracking changes in values\n\n  4. Area Charts:\n     - Similar to line charts but better for cumulative values\n     - Good for showing part-to-whole relationships over time\n     - Use for stacked time-series data\n\n  Always consider:\n  - Data type (categorical, numerical, temporal)\n  - Number of variables\n  - The story you want to tell\n  - User's query intent\n\n  Choose the most appropriate chart type based on these guidelines, but adapt based on the specific data and query context.`;\n\n  try {\n    const { object: config } = await generateObject({\n      model: openai(\"gpt-4o\"),\n      system,\n      prompt: `Given the following data from a SQL query result, generate the chart config that best visualises the data and answers the users query.\n\n      User Query:\n      ${userQuery}\n\n      Data:\n      ${JSON.stringify(results, null, 2)}`,\n      schema: configSchema,\n    });\n\n    const colors: Record<string, string> = {};\n    config.yKeys.forEach((key, index) => {\n      colors[key] = `hsl(var(--chart-${index + 1}))`;\n    });\n\n    const updatedConfig: Config = { ...config, colors };\n    return { config: updatedConfig };\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Failed to generate chart suggestion\");\n  }\n};\n"],"names":[],"mappings":";;;;;;;;IAca;IAuIA;IAkDA;IAuFA","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/lib/rechart-format.ts"],"sourcesContent":["import { Config } from \"./types\";\n\ntype InputDataPoint = Record<string, string | number>;\n\ninterface TransformedDataPoint {\n  [key: string]: string | number | null;\n}\n\ninterface TransformationResult {\n  data: TransformedDataPoint[];\n  xAxisField: string;\n  lineFields: string[];\n}\n\nexport function transformDataForMultiLineChart(\n  data: InputDataPoint[],\n  chartConfig: Config\n): TransformationResult {\n  // console.log(\"Input data:\", data);\n  const {xKey,lineCategories, measurementColumn } = chartConfig;\n\n  const fields = Object.keys(data[0]);\n  // console.log(\"Fields:\", fields);\n\n  const xAxisField = xKey ?? 'year'; // Assuming 'year' is always the x-axis\n  const lineField = fields.find(field => lineCategories?.includes(data[0][field] as string)) || '';\n\n  // console.log(\"X-axis field:\", xAxisField);\n  // console.log(\"Line field:\", lineField);\n\n  const xAxisValues = Array.from(new Set(data.map(item => String(item[xAxisField]))));\n\n  // console.log(\"X-axis values:\", xAxisValues);\n  // console.log(\"Line categories:\", lineCategories);\n\n  const transformedData: TransformedDataPoint[] = xAxisValues.map(xValue => {\n    const dataPoint: TransformedDataPoint = { [xAxisField]: xValue };\n    lineCategories?.forEach(category => {\n      const matchingItem = data.find(item =>\n        String(item[xAxisField]) === xValue && String(item[lineField]) === category\n      );\n      dataPoint[category] = matchingItem ? matchingItem[measurementColumn ?? \"\"] : null;\n    });\n    return dataPoint;\n  });\n\n  transformedData.sort((a, b) => Number(a[xAxisField]) - Number(b[xAxisField]));\n\n  // console.log(\"Transformed data:\", transformedData);\n\n  return {\n    data: transformedData,\n    xAxisField,\n    lineFields: lineCategories ?? []\n  };\n}\n"],"names":[],"mappings":";;;AAcO,SAAS,+BACd,IAAsB,EACtB,WAAmB;IAEnB,oCAAoC;IACpC,MAAM,EAAC,IAAI,EAAC,cAAc,EAAE,iBAAiB,EAAE,GAAG;IAElD,MAAM,SAAS,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;IAClC,kCAAkC;IAElC,MAAM,aAAa,QAAQ,QAAQ,uCAAuC;IAC1E,MAAM,YAAY,OAAO,IAAI,CAAC,CAAA,QAAS,gBAAgB,SAAS,IAAI,CAAC,EAAE,CAAC,MAAM,MAAgB;IAE9F,4CAA4C;IAC5C,yCAAyC;IAEzC,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAA,OAAQ,OAAO,IAAI,CAAC,WAAW;IAE/E,8CAA8C;IAC9C,mDAAmD;IAEnD,MAAM,kBAA0C,YAAY,GAAG,CAAC,CAAA;QAC9D,MAAM,YAAkC;YAAE,CAAC,WAAW,EAAE;QAAO;QAC/D,gBAAgB,QAAQ,CAAA;YACtB,MAAM,eAAe,KAAK,IAAI,CAAC,CAAA,OAC7B,OAAO,IAAI,CAAC,WAAW,MAAM,UAAU,OAAO,IAAI,CAAC,UAAU,MAAM;YAErE,SAAS,CAAC,SAAS,GAAG,eAAe,YAAY,CAAC,qBAAqB,GAAG,GAAG;QAC/E;QACA,OAAO;IACT;IAEA,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAM,OAAO,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,WAAW;IAE3E,qDAAqD;IAErD,OAAO;QACL,MAAM;QACN;QACA,YAAY,kBAAkB,EAAE;IAClC;AACF","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/dynamic-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  Area,\n  AreaChart,\n  Pie,\n  PieChart,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Config, Result } from \"@/lib/types\";\nimport { Label } from \"recharts\";\nimport { transformDataForMultiLineChart } from \"@/lib/rechart-format\";\n\nfunction toTitleCase(str: string): string {\n  return str\n    .split(\"_\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}\nconst colors = [\n  \"hsl(var(--chart-1))\",\n  \"hsl(var(--chart-2))\",\n  \"hsl(var(--chart-3))\",\n  \"hsl(var(--chart-4))\",\n  \"hsl(var(--chart-5))\",\n  \"hsl(var(--chart-6))\",\n  \"hsl(var(--chart-7))\",\n  \"hsl(var(--chart-8))\",\n];\n\nexport function DynamicChart({\n  chartData,\n  chartConfig,\n}: {\n  chartData: Result[];\n  chartConfig: Config;\n}) {\n  const renderChart = () => {\n    if (!chartData || !chartConfig) return <div>No chart data</div>;\n    const parsedChartData = chartData.map((item) => {\n      const parsedItem: { [key: string]: any } = {};\n      for (const [key, value] of Object.entries(item)) {\n        parsedItem[key] = isNaN(Number(value)) ? value : Number(value);\n      }\n      return parsedItem;\n    });\n\n    chartData = parsedChartData;\n\n    const processChartData = (data: Result[], chartType: string) => {\n      if (chartType === \"bar\" || chartType === \"pie\") {\n        if (data.length <= 8) {\n          return data;\n        }\n\n        const subset = data.slice(0, 20);\n        return subset;\n      }\n      return data;\n    };\n\n    chartData = processChartData(chartData, chartConfig.type);\n    // console.log({ chartData, chartConfig });\n\n    switch (chartConfig.type) {\n      case \"bar\":\n        return (\n          <BarChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey={chartConfig.xKey}>\n              <Label\n                value={toTitleCase(chartConfig.xKey)}\n                offset={0}\n                position=\"insideBottom\"\n              />\n            </XAxis>\n            <YAxis>\n              <Label\n                value={toTitleCase(chartConfig.yKeys[0])}\n                angle={-90}\n                position=\"insideLeft\"\n              />\n            </YAxis>\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n            {chartConfig.yKeys.map((key, index) => (\n              <Bar\n                key={key}\n                dataKey={key}\n                fill={colors[index % colors.length]}\n              />\n            ))}\n          </BarChart>\n        );\n      case \"line\":\n        const { data, xAxisField, lineFields } = transformDataForMultiLineChart(\n          chartData,\n          chartConfig,\n        );\n        const useTransformedData =\n          chartConfig.multipleLines &&\n          chartConfig.measurementColumn &&\n          chartConfig.yKeys.includes(chartConfig.measurementColumn);\n        // console.log(useTransformedData, \"useTransformedData\");\n        // const useTransformedData = false;\n        return (\n          <LineChart data={useTransformedData ? data : chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey={useTransformedData ? chartConfig.xKey : chartConfig.xKey}\n            >\n              <Label\n                value={toTitleCase(\n                  useTransformedData ? xAxisField : chartConfig.xKey,\n                )}\n                offset={0}\n                position=\"insideBottom\"\n              />\n            </XAxis>\n            <YAxis>\n              <Label\n                value={toTitleCase(chartConfig.yKeys[0])}\n                angle={-90}\n                position=\"insideLeft\"\n              />\n            </YAxis>\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n            {useTransformedData\n              ? lineFields.map((key, index) => (\n                  <Line\n                    key={key}\n                    type=\"monotone\"\n                    dataKey={key}\n                    stroke={colors[index % colors.length]}\n                  />\n                ))\n              : chartConfig.yKeys.map((key, index) => (\n                  <Line\n                    key={key}\n                    type=\"monotone\"\n                    dataKey={key}\n                    stroke={colors[index % colors.length]}\n                  />\n                ))}\n          </LineChart>\n        );\n      case \"area\":\n        return (\n          <AreaChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey={chartConfig.xKey} />\n            <YAxis />\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n            {chartConfig.yKeys.map((key, index) => (\n              <Area\n                key={key}\n                type=\"monotone\"\n                dataKey={key}\n                fill={colors[index % colors.length]}\n                stroke={colors[index % colors.length]}\n              />\n            ))}\n          </AreaChart>\n        );\n      case \"pie\":\n        return (\n          <PieChart>\n            <Pie\n              data={chartData}\n              dataKey={chartConfig.yKeys[0]}\n              nameKey={chartConfig.xKey}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={120}\n            >\n              {chartData.map((_, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={colors[index % colors.length]}\n                />\n              ))}\n            </Pie>\n            <ChartTooltip content={<ChartTooltipContent />} />\n            {chartConfig.legend && <Legend />}\n          </PieChart>\n        );\n      default:\n        return <div>Unsupported chart type: {chartConfig.type}</div>;\n    }\n  };\n\n  return (\n    <div className=\"w-full flex flex-col justify-center items-center\">\n      <h2 className=\"text-lg font-bold mb-2\">{chartConfig.title}</h2>\n      {chartConfig && chartData.length > 0 && (\n        <ChartContainer\n          config={chartConfig.yKeys.reduce(\n            (acc, key, index) => {\n              acc[key] = {\n                label: key,\n                color: colors[index % colors.length],\n              };\n              return acc;\n            },\n            {} as Record<string, { label: string; color: string }>,\n          )}\n          className=\"h-[320px] w-full\"\n        >\n          {renderChart()}\n        </ChartContainer>\n      )}\n      <div className=\"w-full\">\n        <p className=\"mt-4 text-sm\">{chartConfig.description}</p>\n        <p className=\"mt-4 text-sm\">{chartConfig.takeaway}</p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/skeleton-card.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\";\n\nexport function SkeletonCard() {\n  return (\n    <div className=\"flex flex-col space-y-2 w-full\">\n    <div className=\"w-full flex items-center justify-center\">\n    <Skeleton className=\"h-[28px] w-72 rounded-xl\" />\n    </div>\n    <Skeleton className=\"h-[300px] w-full rounded-xl\" />\n      <div className=\"w-full flex justify-center items-center\">\n        <Skeleton className=\"h-4 w-20\" />\n        </div>\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-[450px]\" />\n      </div>\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-[350px]\" />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,qZAAC;QAAI,WAAU;;0BACf,qZAAC;gBAAI,WAAU;0BACf,cAAA,qZAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAEpB,qZAAC,6HAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;0BAClB,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAEtB,qZAAC;gBAAI,WAAU;;kCACb,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCACpB,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,qZAAC;gBAAI,WAAU;;kCACb,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCACpB,qZAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI5B","debugId":null}},
    {"offset": {"line": 907, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <table\n    ref={ref}\n    className={cn(\"w-full caption-bottom text-sm\", className)}\n    {...props}\n  />\n));\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n));\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n));\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b border-border transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n));\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/results.tsx"],"sourcesContent":["import { Config, Result, Unicorn } from \"@/lib/types\";\nimport { DynamicChart } from \"./dynamic-chart\";\nimport { SkeletonCard } from \"./skeleton-card\";\nimport {\n  TableHeader,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Table,\n} from \"./ui/table\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\n\nexport const Results = ({\n  results,\n  columns,\n  chartConfig,\n}: {\n  results: Result[];\n  columns: string[];\n  chartConfig: Config | null;\n}) => {\n  const formatColumnTitle = (title: string) => {\n    return title\n      .split(\"_\")\n      .map((word, index) =>\n        index === 0 ? word.charAt(0).toUpperCase() + word.slice(1) : word\n      )\n      .join(\" \");\n  };\n\n  const formatCellValue = (column: string, value: any) => {\n    if (column.toLowerCase().includes(\"valuation\")) {\n      const parsedValue = parseFloat(value);\n      if (isNaN(parsedValue)) {\n        return \"\";\n      }\n      const formattedValue = parsedValue.toFixed(2);\n      const trimmedValue = formattedValue.replace(/\\.?0+$/, \"\");\n      return `$${trimmedValue}B`;\n    }\n    if (column.toLowerCase().includes(\"rate\")) {\n      const parsedValue = parseFloat(value);\n      if (isNaN(parsedValue)) {\n        return \"\";\n      }\n      const percentage = (parsedValue * 100).toFixed(2);\n      return `${percentage}%`;\n    }\n    if (value instanceof Date) {\n      return value.toLocaleDateString();\n    }\n    return String(value);\n  };\n\n  const canShowChart =\n    Object.keys(results[0] || {}).length > 1 && results.length >= 2;\n  const defaultTab = canShowChart ? \"charts\" : \"table\";\n\n  return (\n    <div className=\"flex-grow flex flex-col\">\n      <Tabs\n        defaultValue={defaultTab}\n        className=\"w-full flex-grow flex flex-col\"\n      >\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"charts\" disabled={!canShowChart}>\n            Chart\n          </TabsTrigger>\n          <TabsTrigger value=\"table\">Table</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"charts\" className=\"flex-grow overflow-auto\">\n          <div className=\"mt-4\">\n            {chartConfig && results.length > 0 ? (\n              <DynamicChart chartData={results} chartConfig={chartConfig} />\n            ) : (\n              <SkeletonCard />\n            )}\n          </div>\n        </TabsContent>\n        <TabsContent value=\"table\" className=\"flex-grow\">\n          <div className=\"sm:min-h-[10px] relative\">\n            <Table className=\"min-w-full divide-y divide-border\">\n              <TableHeader className=\"bg-secondary sticky top-0 shadow-sm\">\n                <TableRow>\n                  {columns.map((column, index) => (\n                    <TableHead\n                      key={index}\n                      className=\"px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\"\n                    >\n                      {formatColumnTitle(column)}\n                    </TableHead>\n                  ))}\n                </TableRow>\n              </TableHeader>\n              <TableBody className=\"bg-card divide-y divide-border\">\n                {results.map((company, index) => (\n                  <TableRow key={index} className=\"hover:bg-muted\">\n                    {columns.map((column, cellIndex) => (\n                      <TableCell\n                        key={cellIndex}\n                        className=\"px-6 py-4 whitespace-nowrap text-sm text-foreground\"\n                      >\n                        {formatCellValue(\n                          column,\n                          company[column as keyof Unicorn]\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAQA;;;;;;AAEO,MAAM,UAAU,CAAC,EACtB,OAAO,EACP,OAAO,EACP,WAAW,EAKZ;IACC,MAAM,oBAAoB,CAAC;QACzB,OAAO,MACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,MAAM,QACV,UAAU,IAAI,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,KAAK,MAE9D,IAAI,CAAC;IACV;IAEA,MAAM,kBAAkB,CAAC,QAAgB;QACvC,IAAI,OAAO,WAAW,GAAG,QAAQ,CAAC,cAAc;YAC9C,MAAM,cAAc,WAAW;YAC/B,IAAI,MAAM,cAAc;gBACtB,OAAO;YACT;YACA,MAAM,iBAAiB,YAAY,OAAO,CAAC;YAC3C,MAAM,eAAe,eAAe,OAAO,CAAC,UAAU;YACtD,OAAO,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;QAC5B;QACA,IAAI,OAAO,WAAW,GAAG,QAAQ,CAAC,SAAS;YACzC,MAAM,cAAc,WAAW;YAC/B,IAAI,MAAM,cAAc;gBACtB,OAAO;YACT;YACA,MAAM,aAAa,CAAC,cAAc,GAAG,EAAE,OAAO,CAAC;YAC/C,OAAO,GAAG,WAAW,CAAC,CAAC;QACzB;QACA,IAAI,iBAAiB,MAAM;YACzB,OAAO,MAAM,kBAAkB;QACjC;QACA,OAAO,OAAO;IAChB;IAEA,MAAM,eACJ,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,GAAG,KAAK,QAAQ,MAAM,IAAI;IAChE,MAAM,aAAa,eAAe,WAAW;IAE7C,qBACE,qZAAC;QAAI,WAAU;kBACb,cAAA,qZAAC,yHAAA,CAAA,OAAI;YACH,cAAc;YACd,WAAU;;8BAEV,qZAAC,yHAAA,CAAA,WAAQ;oBAAC,WAAU;;sCAClB,qZAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;4BAAS,UAAU,CAAC;sCAAc;;;;;;sCAGrD,qZAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;sCAAQ;;;;;;;;;;;;8BAE7B,qZAAC,yHAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,WAAU;8BACpC,cAAA,qZAAC;wBAAI,WAAU;kCACZ,eAAe,QAAQ,MAAM,GAAG,kBAC/B,qZAAC,+HAAA,CAAA,eAAY;4BAAC,WAAW;4BAAS,aAAa;;;;;iDAE/C,qZAAC,+HAAA,CAAA,eAAY;;;;;;;;;;;;;;;8BAInB,qZAAC,yHAAA,CAAA,cAAW;oBAAC,OAAM;oBAAQ,WAAU;8BACnC,cAAA,qZAAC;wBAAI,WAAU;kCACb,cAAA,qZAAC,0HAAA,CAAA,QAAK;4BAAC,WAAU;;8CACf,qZAAC,0HAAA,CAAA,cAAW;oCAAC,WAAU;8CACrB,cAAA,qZAAC,0HAAA,CAAA,WAAQ;kDACN,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,qZAAC,0HAAA,CAAA,YAAS;gDAER,WAAU;0DAET,kBAAkB;+CAHd;;;;;;;;;;;;;;;8CAQb,qZAAC,0HAAA,CAAA,YAAS;oCAAC,WAAU;8CAClB,QAAQ,GAAG,CAAC,CAAC,SAAS,sBACrB,qZAAC,0HAAA,CAAA,WAAQ;4CAAa,WAAU;sDAC7B,QAAQ,GAAG,CAAC,CAAC,QAAQ,0BACpB,qZAAC,0HAAA,CAAA,YAAS;oDAER,WAAU;8DAET,gBACC,QACA,OAAO,CAAC,OAAwB;mDAL7B;;;;;2CAHI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBjC","debugId":null}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/chat-container.tsx"],"sourcesContent":["\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Children, useCallback, useEffect, useRef, useState } from \"react\"\n\nconst useAutoScroll = (\n  containerRef: React.RefObject<HTMLDivElement | null>,\n  enabled: boolean\n) => {\n  const [autoScrollEnabled, setAutoScrollEnabled] = useState(true)\n  const lastScrollTopRef = useRef(0)\n  const autoScrollingRef = useRef(false)\n  const [newMessageAdded, setNewMessageAdded] = useState(false)\n  const prevChildrenCountRef = useRef(0)\n  const scrollTriggeredRef = useRef(false)\n\n  const isAtBottom = useCallback((element: HTMLDivElement) => {\n    const { scrollTop, scrollHeight, clientHeight } = element\n    return scrollHeight - scrollTop - clientHeight <= 8\n  }, [])\n\n  const scrollToBottom = useCallback(\n    (behavior: ScrollBehavior = \"smooth\") => {\n      const container = containerRef.current\n      if (!container) return\n\n      autoScrollingRef.current = true\n      scrollTriggeredRef.current = true\n\n      const targetScrollTop = container.scrollHeight - container.clientHeight\n\n      container.scrollTo({\n        top: targetScrollTop,\n        behavior: behavior,\n      })\n\n      const checkScrollEnd = () => {\n        if (Math.abs(container.scrollTop - targetScrollTop) < 5) {\n          autoScrollingRef.current = false\n          scrollTriggeredRef.current = false\n          return\n        }\n\n        requestAnimationFrame(checkScrollEnd)\n      }\n\n      requestAnimationFrame(checkScrollEnd)\n\n      const safetyTimeout = setTimeout(() => {\n        autoScrollingRef.current = false\n        scrollTriggeredRef.current = false\n      }, 500)\n\n      try {\n        const handleScrollEnd = () => {\n          autoScrollingRef.current = false\n          scrollTriggeredRef.current = false\n          clearTimeout(safetyTimeout)\n          container.removeEventListener(\"scrollend\", handleScrollEnd)\n        }\n\n        container.addEventListener(\"scrollend\", handleScrollEnd, {\n          once: true,\n        })\n      } catch (e) {\n        // scrollend event not supported in this browser, fallback to requestAnimationFrame\n      }\n    },\n    [containerRef]\n  )\n\n  useEffect(() => {\n    if (!enabled) return\n\n    const container = containerRef?.current\n    if (!container) return\n\n    lastScrollTopRef.current = container.scrollTop\n\n    const handleScroll = () => {\n      if (autoScrollingRef.current) return\n\n      const currentScrollTop = container.scrollTop\n\n      if (currentScrollTop < lastScrollTopRef.current && autoScrollEnabled) {\n        setAutoScrollEnabled(false)\n      }\n\n      if (isAtBottom(container) && !autoScrollEnabled) {\n        setAutoScrollEnabled(true)\n      }\n\n      lastScrollTopRef.current = currentScrollTop\n    }\n\n    const handleWheel = (e: WheelEvent) => {\n      if (e.deltaY < 0 && autoScrollEnabled) {\n        setAutoScrollEnabled(false)\n      }\n    }\n\n    const handleTouchStart = () => {\n      lastScrollTopRef.current = container.scrollTop\n    }\n\n    const handleTouchMove = () => {\n      if (container.scrollTop < lastScrollTopRef.current && autoScrollEnabled) {\n        setAutoScrollEnabled(false)\n      }\n\n      lastScrollTopRef.current = container.scrollTop\n    }\n\n    const handleTouchEnd = () => {\n      if (isAtBottom(container) && !autoScrollEnabled) {\n        setAutoScrollEnabled(true)\n      }\n    }\n\n    container.addEventListener(\"scroll\", handleScroll, { passive: true })\n    container.addEventListener(\"wheel\", handleWheel, { passive: true })\n    container.addEventListener(\"touchstart\", handleTouchStart, {\n      passive: true,\n    })\n    container.addEventListener(\"touchmove\", handleTouchMove, { passive: true })\n    container.addEventListener(\"touchend\", handleTouchEnd, { passive: true })\n\n    return () => {\n      container.removeEventListener(\"scroll\", handleScroll)\n      container.removeEventListener(\"wheel\", handleWheel)\n      container.removeEventListener(\"touchstart\", handleTouchStart)\n      container.removeEventListener(\"touchmove\", handleTouchMove)\n      container.removeEventListener(\"touchend\", handleTouchEnd)\n    }\n  }, [containerRef, enabled, autoScrollEnabled, isAtBottom])\n\n  return {\n    autoScrollEnabled,\n    scrollToBottom,\n    isScrolling: autoScrollingRef.current,\n    scrollTriggered: scrollTriggeredRef.current,\n    newMessageAdded,\n    setNewMessageAdded,\n    prevChildrenCountRef,\n  }\n}\n\nexport type ChatContainerProps = {\n  children: React.ReactNode\n  className?: string\n  autoScroll?: boolean\n  scrollToRef?: React.RefObject<HTMLDivElement | null>\n  ref?: React.RefObject<HTMLDivElement | null>\n} & React.HTMLAttributes<HTMLDivElement>\n\nfunction ChatContainer({\n  className,\n  children,\n  autoScroll = true,\n  scrollToRef,\n  ref,\n  ...props\n}: ChatContainerProps) {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const localBottomRef = useRef<HTMLDivElement>(null)\n  const bottomRef = scrollToRef || localBottomRef\n  const chatContainerRef = ref || containerRef\n  const prevChildrenRef = useRef<React.ReactNode>(null)\n  const contentChangedWithoutNewMessageRef = useRef(false)\n\n  const {\n    autoScrollEnabled,\n    scrollToBottom,\n    isScrolling,\n    scrollTriggered,\n    newMessageAdded,\n    setNewMessageAdded,\n    prevChildrenCountRef,\n  } = useAutoScroll(chatContainerRef, autoScroll)\n\n  useEffect(() => {\n    const childrenArray = Children.toArray(children)\n    const currentChildrenCount = childrenArray.length\n\n    if (currentChildrenCount > prevChildrenCountRef.current) {\n      setNewMessageAdded(true)\n    } else if (prevChildrenRef.current !== children) {\n      contentChangedWithoutNewMessageRef.current = true\n    }\n\n    prevChildrenCountRef.current = currentChildrenCount\n    prevChildrenRef.current = children\n  }, [children, setNewMessageAdded])\n\n  useEffect(() => {\n    if (!autoScroll) return\n\n    const scrollHandler = () => {\n      if (newMessageAdded) {\n        scrollToBottom(\"smooth\")\n        setNewMessageAdded(false)\n        contentChangedWithoutNewMessageRef.current = false\n      } else if (\n        contentChangedWithoutNewMessageRef.current &&\n        autoScrollEnabled &&\n        !isScrolling &&\n        !scrollTriggered\n      ) {\n        scrollToBottom(\"smooth\")\n        contentChangedWithoutNewMessageRef.current = false\n      }\n    }\n\n    requestAnimationFrame(scrollHandler)\n  }, [\n    children,\n    autoScroll,\n    autoScrollEnabled,\n    isScrolling,\n    scrollTriggered,\n    scrollToBottom,\n    newMessageAdded,\n    setNewMessageAdded,\n  ])\n\n  return (\n    <div\n      className={cn(\"flex flex-col overflow-y-auto\", className)}\n      role=\"log\"\n      ref={chatContainerRef}\n      {...props}\n    >\n      {children}\n      <div\n        ref={bottomRef}\n        className=\"h-[1px] w-full flex-shrink-0 scroll-mt-4\"\n        aria-hidden=\"true\"\n      />\n    </div>\n  )\n}\n\nexport { ChatContainer }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1457, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1508, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,qZAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oZACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/code-block.tsx"],"sourcesContent":["\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport React, { useEffect, useState } from \"react\"\nimport { codeToHtml } from \"shiki\"\n\nexport type CodeBlockProps = {\n  children?: React.ReactNode\n  className?: string\n} & React.HTMLProps<HTMLDivElement>\n\nfunction CodeBlock({ children, className, ...props }: CodeBlockProps) {\n  return (\n    <div\n      className={cn(\n        \"not-prose flex w-full flex-col overflow-clip border\",\n        \"border-border bg-card text-card-foreground rounded-xl\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport type CodeBlockCodeProps = {\n  code: string\n  language?: string\n  theme?: string\n  className?: string\n} & React.HTMLProps<HTMLDivElement>\n\nfunction CodeBlockCode({\n  code,\n  language = \"tsx\",\n  theme = \"github-light\",\n  className,\n  ...props\n}: CodeBlockCodeProps) {\n  const [highlightedHtml, setHighlightedHtml] = useState<string | null>(null)\n\n  useEffect(() => {\n    async function highlight() {\n      if (!code) {\n        setHighlightedHtml(\"<pre><code></code></pre>\")\n        return\n      }\n\n      const html = await codeToHtml(code, { lang: language, theme })\n      setHighlightedHtml(html)\n    }\n    highlight()\n  }, [code, language, theme])\n\n  const classNames = cn(\n    \"w-full overflow-x-auto text-[13px] [&>pre]:px-4 [&>pre]:py-4\",\n    className\n  )\n\n  // SSR fallback: render plain code if not hydrated yet\n  return highlightedHtml ? (\n    <div\n      className={classNames}\n      dangerouslySetInnerHTML={{ __html: highlightedHtml }}\n      {...props}\n    />\n  ) : (\n    <div className={classNames} {...props}>\n      <pre>\n        <code>{code}</code>\n      </pre>\n    </div>\n  )\n}\n\nexport type CodeBlockGroupProps = React.HTMLAttributes<HTMLDivElement>\n\nfunction CodeBlockGroup({\n  children,\n  className,\n  ...props\n}: CodeBlockGroupProps) {\n  return (\n    <div\n      className={cn(\"flex items-center justify-between\", className)}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport { CodeBlockGroup, CodeBlockCode, CodeBlock }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;;;;;AAJA;;;;;AAWA,SAAS,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAuB;IAClE,qBACE,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uDACA,yDACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AASA,SAAS,cAAc,EACrB,IAAI,EACJ,WAAW,KAAK,EAChB,QAAQ,cAAc,EACtB,SAAS,EACT,GAAG,OACgB;IACnB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,4WAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtE,CAAA,GAAA,4WAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,IAAI,CAAC,MAAM;gBACT,mBAAmB;gBACnB;YACF;YAEA,MAAM,OAAO,MAAM,CAAA,GAAA,0GAAA,CAAA,aAAU,AAAD,EAAE,MAAM;gBAAE,MAAM;gBAAU;YAAM;YAC5D,mBAAmB;QACrB;QACA;IACF,GAAG;QAAC;QAAM;QAAU;KAAM;IAE1B,MAAM,aAAa,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAClB,gEACA;IAGF,sDAAsD;IACtD,OAAO,gCACL,qZAAC;QACC,WAAW;QACX,yBAAyB;YAAE,QAAQ;QAAgB;QAClD,GAAG,KAAK;;;;;6BAGX,qZAAC;QAAI,WAAW;QAAa,GAAG,KAAK;kBACnC,cAAA,qZAAC;sBACC,cAAA,qZAAC;0BAAM;;;;;;;;;;;;;;;;AAIf;AAIA,SAAS,eAAe,EACtB,QAAQ,EACR,SAAS,EACT,GAAG,OACiB;IACpB,qBACE,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 1734, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/markdown.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport { marked } from \"marked\"\nimport { memo, useId, useMemo } from \"react\"\nimport ReactMarkdown, { Components } from \"react-markdown\"\nimport remarkGfm from \"remark-gfm\"\nimport { CodeBlock, CodeBlockCode } from \"./code-block\"\n\nexport type MarkdownProps = {\n  children: string\n  id?: string\n  className?: string\n  components?: Partial<Components>\n}\n\nfunction parseMarkdownIntoBlocks(markdown: string): string[] {\n  const tokens = marked.lexer(markdown)\n  return tokens.map((token) => token.raw)\n}\n\nfunction extractLanguage(className?: string): string {\n  if (!className) return \"plaintext\"\n  const match = className.match(/language-(\\w+)/)\n  return match ? match[1] : \"plaintext\"\n}\n\nconst INITIAL_COMPONENTS: Partial<Components> = {\n  code: function CodeComponent({ className, children, ...props }) {\n    const isInline =\n      !props.node?.position?.start.line ||\n      props.node?.position?.start.line === props.node?.position?.end.line\n\n    if (isInline) {\n      return (\n        <span\n          className={cn(\n            \"bg-primary-foreground rounded-sm px-1 font-mono text-sm\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </span>\n      )\n    }\n\n    const language = extractLanguage(className)\n\n    return (\n      <CodeBlock className={className}>\n        <CodeBlockCode code={children as string} language={language} />\n      </CodeBlock>\n    )\n  },\n  pre: function PreComponent({ children }) {\n    return <>{children}</>\n  },\n}\n\nconst MemoizedMarkdownBlock = memo(\n  function MarkdownBlock({\n    content,\n    components = INITIAL_COMPONENTS,\n  }: {\n    content: string\n    components?: Partial<Components>\n  }) {\n    return (\n      <ReactMarkdown remarkPlugins={[remarkGfm]} components={components}>\n        {content}\n      </ReactMarkdown>\n    )\n  },\n  function propsAreEqual(prevProps, nextProps) {\n    return prevProps.content === nextProps.content\n  }\n)\n\nMemoizedMarkdownBlock.displayName = \"MemoizedMarkdownBlock\"\n\nfunction MarkdownComponent({\n  children,\n  id,\n  className,\n  components = INITIAL_COMPONENTS,\n}: MarkdownProps) {\n  const generatedId = useId()\n  const blockId = id ?? generatedId\n  const blocks = useMemo(() => parseMarkdownIntoBlocks(children), [children])\n\n  return (\n    <div className={className}>\n      {blocks.map((block, index) => (\n        <MemoizedMarkdownBlock\n          key={`${blockId}-block-${index}`}\n          content={block}\n          components={components}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst Markdown = memo(MarkdownComponent)\nMarkdown.displayName = \"Markdown\"\n\nexport { Markdown }\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASA,SAAS,wBAAwB,QAAgB;IAC/C,MAAM,SAAS,8IAAA,CAAA,SAAM,CAAC,KAAK,CAAC;IAC5B,OAAO,OAAO,GAAG,CAAC,CAAC,QAAU,MAAM,GAAG;AACxC;AAEA,SAAS,gBAAgB,SAAkB;IACzC,IAAI,CAAC,WAAW,OAAO;IACvB,MAAM,QAAQ,UAAU,KAAK,CAAC;IAC9B,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC5B;AAEA,MAAM,qBAA0C;IAC9C,MAAM,SAAS,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;QAC5D,MAAM,WACJ,CAAC,MAAM,IAAI,EAAE,UAAU,MAAM,QAC7B,MAAM,IAAI,EAAE,UAAU,MAAM,SAAS,MAAM,IAAI,EAAE,UAAU,IAAI;QAEjE,IAAI,UAAU;YACZ,qBACE,qZAAC;gBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;gBAED,GAAG,KAAK;0BAER;;;;;;QAGP;QAEA,MAAM,WAAW,gBAAgB;QAEjC,qBACE,qZAAC,kIAAA,CAAA,YAAS;YAAC,WAAW;sBACpB,cAAA,qZAAC,kIAAA,CAAA,gBAAa;gBAAC,MAAM;gBAAoB,UAAU;;;;;;;;;;;IAGzD;IACA,KAAK,SAAS,aAAa,EAAE,QAAQ,EAAE;QACrC,qBAAO;sBAAG;;IACZ;AACF;AAEA,MAAM,sCAAwB,CAAA,GAAA,4WAAA,CAAA,OAAI,AAAD,EAC/B,SAAS,cAAc,EACrB,OAAO,EACP,aAAa,kBAAkB,EAIhC;IACC,qBACE,qZAAC,wLAAA,CAAA,UAAa;QAAC,eAAe;YAAC,6IAAA,CAAA,UAAS;SAAC;QAAE,YAAY;kBACpD;;;;;;AAGP,GACA,SAAS,cAAc,SAAS,EAAE,SAAS;IACzC,OAAO,UAAU,OAAO,KAAK,UAAU,OAAO;AAChD;AAGF,sBAAsB,WAAW,GAAG;AAEpC,SAAS,kBAAkB,EACzB,QAAQ,EACR,EAAE,EACF,SAAS,EACT,aAAa,kBAAkB,EACjB;IACd,MAAM,cAAc,CAAA,GAAA,4WAAA,CAAA,QAAK,AAAD;IACxB,MAAM,UAAU,MAAM;IACtB,MAAM,SAAS,CAAA,GAAA,4WAAA,CAAA,UAAO,AAAD,EAAE,IAAM,wBAAwB,WAAW;QAAC;KAAS;IAE1E,qBACE,qZAAC;QAAI,WAAW;kBACb,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,qZAAC;gBAEC,SAAS;gBACT,YAAY;eAFP,GAAG,QAAQ,OAAO,EAAE,OAAO;;;;;;;;;;AAO1C;AAEA,MAAM,yBAAW,CAAA,GAAA,4WAAA,CAAA,OAAI,AAAD,EAAE;AACtB,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1849, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/message.tsx"],"sourcesContent":["import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\nimport { cn } from \"@/lib/utils\"\nimport { Markdown } from \"./markdown\"\n\nexport type MessageProps = {\n  children: React.ReactNode\n  className?: string\n} & React.HTMLProps<HTMLDivElement>\n\nconst Message = ({ children, className, ...props }: MessageProps) => (\n  <div className={cn(\"flex gap-3\", className)} {...props}>\n    {children}\n  </div>\n)\n\nexport type MessageAvatarProps = {\n  src: string\n  alt: string\n  fallback?: string\n  delayMs?: number\n  className?: string\n}\n\nconst MessageAvatar = ({\n  src,\n  alt,\n  fallback,\n  delayMs,\n  className,\n}: MessageAvatarProps) => {\n  return (\n    <Avatar className={cn(\"h-8 w-8 shrink-0\", className)}>\n      <AvatarImage src={src} alt={alt} />\n      {fallback && (\n        <AvatarFallback delayMs={delayMs}>{fallback}</AvatarFallback>\n      )}\n    </Avatar>\n  )\n}\n\nexport type MessageContentProps = {\n  children: React.ReactNode\n  markdown?: boolean\n  className?: string\n} & React.ComponentProps<typeof Markdown> &\n  React.HTMLProps<HTMLDivElement>\n\nconst MessageContent = ({\n  children,\n  markdown = false,\n  className,\n  ...props\n}: MessageContentProps) => {\n  const classNames = cn(\n    \"rounded-lg p-2 text-foreground bg-secondary prose break-words whitespace-normal\",\n    className\n  )\n\n  return markdown ? (\n    <Markdown className={classNames} {...props}>\n      {children as string}\n    </Markdown>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport type MessageActionsProps = {\n  children: React.ReactNode\n  className?: string\n} & React.HTMLProps<HTMLDivElement>\n\nconst MessageActions = ({\n  children,\n  className,\n  ...props\n}: MessageActionsProps) => (\n  <div\n    className={cn(\"text-muted-foreground flex items-center gap-2\", className)}\n    {...props}\n  >\n    {children}\n  </div>\n)\n\nexport type MessageActionProps = {\n  className?: string\n  tooltip: React.ReactNode\n  children: React.ReactNode\n  side?: \"top\" | \"bottom\" | \"left\" | \"right\"\n} & React.ComponentProps<typeof Tooltip>\n\nconst MessageAction = ({\n  tooltip,\n  children,\n  className,\n  side = \"top\",\n  ...props\n}: MessageActionProps) => {\n  return (\n    <TooltipProvider>\n      <Tooltip {...props}>\n        <TooltipTrigger asChild>{children}</TooltipTrigger>\n        <TooltipContent side={side} className={className}>\n          {tooltip}\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  )\n}\n\nexport { Message, MessageAvatar, MessageContent, MessageActions, MessageAction }\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AAMA;AACA;;;;;;;;;;AAOA,MAAM,UAAU,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAqB,iBAC9D,qZAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAAa,GAAG,KAAK;kBACnD;;;;;;AAYL,MAAM,gBAAgB,CAAC,EACrB,GAAG,EACH,GAAG,EACH,QAAQ,EACR,OAAO,EACP,SAAS,EACU;IACnB,qBACE,qZAAC,2HAAA,CAAA,SAAM;QAAC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oBAAoB;;0BACxC,qZAAC,2HAAA,CAAA,cAAW;gBAAC,KAAK;gBAAK,KAAK;;;;;;YAC3B,0BACC,qZAAC,2HAAA,CAAA,iBAAc;gBAAC,SAAS;0BAAU;;;;;;;;;;;;AAI3C;AASA,MAAM,iBAAiB,CAAC,EACtB,QAAQ,EACR,WAAW,KAAK,EAChB,SAAS,EACT,GAAG,OACiB;IACpB,MAAM,aAAa,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAClB,mFACA;IAGF,OAAO,yBACL,qZAAC,6HAAA,CAAA,WAAQ;QAAC,WAAW;QAAa,GAAG,KAAK;kBACvC;;;;;6BAGH,qZAAC;QAAI,WAAW;QAAa,GAAG,KAAK;kBAClC;;;;;;AAGP;AAOA,MAAM,iBAAiB,CAAC,EACtB,QAAQ,EACR,SAAS,EACT,GAAG,OACiB,iBACpB,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iDAAiD;QAC9D,GAAG,KAAK;kBAER;;;;;;AAWL,MAAM,gBAAgB,CAAC,EACrB,OAAO,EACP,QAAQ,EACR,SAAS,EACT,OAAO,KAAK,EACZ,GAAG,OACgB;IACnB,qBACE,qZAAC,4HAAA,CAAA,kBAAe;kBACd,cAAA,qZAAC,4HAAA,CAAA,UAAO;YAAE,GAAG,KAAK;;8BAChB,qZAAC,4HAAA,CAAA,iBAAc;oBAAC,OAAO;8BAAE;;;;;;8BACzB,qZAAC,4HAAA,CAAA,iBAAc;oBAAC,MAAM;oBAAM,WAAW;8BACpC;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 1977, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,4WAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,qZAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2005, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/components/ui/prompt-input.tsx"],"sourcesContent":["\"use client\"\n\nimport { Textarea } from \"@/components/ui/textarea\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\nimport { cn } from \"@/lib/utils\"\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\ntype PromptInputContextType = {\n  isLoading: boolean\n  value: string\n  setValue: (value: string) => void\n  maxHeight: number | string\n  onSubmit?: () => void\n  disabled?: boolean\n}\n\nconst PromptInputContext = createContext<PromptInputContextType>({\n  isLoading: false,\n  value: \"\",\n  setValue: () => {},\n  maxHeight: 240,\n  onSubmit: undefined,\n  disabled: false,\n})\n\nfunction usePromptInput() {\n  const context = useContext(PromptInputContext)\n  if (!context) {\n    throw new Error(\"usePromptInput must be used within a PromptInput\")\n  }\n  return context\n}\n\ntype PromptInputProps = {\n  isLoading?: boolean\n  value?: string\n  onValueChange?: (value: string) => void\n  maxHeight?: number | string\n  onSubmit?: () => void\n  children: React.ReactNode\n  className?: string\n}\n\nfunction PromptInput({\n  className,\n  isLoading = false,\n  maxHeight = 240,\n  value,\n  onValueChange,\n  onSubmit,\n  children,\n}: PromptInputProps) {\n  const [internalValue, setInternalValue] = useState(value || \"\")\n\n  const handleChange = (newValue: string) => {\n    setInternalValue(newValue)\n    onValueChange?.(newValue)\n  }\n\n  return (\n    <TooltipProvider>\n      <PromptInputContext.Provider\n        value={{\n          isLoading,\n          value: value ?? internalValue,\n          setValue: onValueChange ?? handleChange,\n          maxHeight,\n          onSubmit,\n        }}\n      >\n        <div\n          className={cn(\n            \"border-input bg-background rounded-3xl border p-2 shadow-xs\",\n            className\n          )}\n        >\n          {children}\n        </div>\n      </PromptInputContext.Provider>\n    </TooltipProvider>\n  )\n}\n\nexport type PromptInputTextareaProps = {\n  disableAutosize?: boolean\n} & React.ComponentProps<typeof Textarea>\n\nfunction PromptInputTextarea({\n  className,\n  onKeyDown,\n  disableAutosize = false,\n  ...props\n}: PromptInputTextareaProps) {\n  const { value, setValue, maxHeight, onSubmit, disabled } = usePromptInput()\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n\n  useEffect(() => {\n    if (disableAutosize) return\n\n    if (!textareaRef.current) return\n    textareaRef.current.style.height = \"auto\"\n    textareaRef.current.style.height =\n      typeof maxHeight === \"number\"\n        ? `${Math.min(textareaRef.current.scrollHeight, maxHeight)}px`\n        : `min(${textareaRef.current.scrollHeight}px, ${maxHeight})`\n  }, [value, maxHeight, disableAutosize])\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault()\n      onSubmit?.()\n    }\n    onKeyDown?.(e)\n  }\n\n  return (\n    <Textarea\n      ref={textareaRef}\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onKeyDown={handleKeyDown}\n      className={cn(\n        \"text-primary min-h-[44px] w-full resize-none border-none bg-transparent shadow-none outline-none focus-visible:ring-0 focus-visible:ring-offset-0\",\n        className\n      )}\n      rows={1}\n      disabled={disabled}\n      {...props}\n    />\n  )\n}\n\ntype PromptInputActionsProps = React.HTMLAttributes<HTMLDivElement>\n\nfunction PromptInputActions({\n  children,\n  className,\n  ...props\n}: PromptInputActionsProps) {\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\ntype PromptInputActionProps = {\n  className?: string\n  tooltip: React.ReactNode\n  children: React.ReactNode\n  side?: \"top\" | \"bottom\" | \"left\" | \"right\"\n} & React.ComponentProps<typeof Tooltip>\n\nfunction PromptInputAction({\n  tooltip,\n  children,\n  className,\n  side = \"top\",\n  ...props\n}: PromptInputActionProps) {\n  const { disabled } = usePromptInput()\n\n  return (\n    <Tooltip {...props}>\n      <TooltipTrigger asChild disabled={disabled}>\n        {children}\n      </TooltipTrigger>\n      <TooltipContent side={side} className={className}>\n        {tooltip}\n      </TooltipContent>\n    </Tooltip>\n  )\n}\n\nexport {\n  PromptInput,\n  PromptInputTextarea,\n  PromptInputActions,\n  PromptInputAction,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2154, "column": 0}, "map": {"version":3,"sources":["file:///Users/balasubramanian/Desktop/mercury-chat-viz/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  generateChartConfig,\n  generateQuery,\n  runGenerateSQLQuery,\n} from \"./actions\";\nimport { Config, Result } from \"@/lib/types\";\nimport { Loader2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { ProjectInfo } from \"@/components/project-info\";\nimport { Results } from \"@/components/results\";\nimport { SuggestedQueries } from \"@/components/suggested-queries\";\nimport { QueryViewer } from \"@/components/query-viewer\";\nimport { Search } from \"@/components/search\";\nimport { Header } from \"@/components/header\";\nimport { ChatContainer } from \"@/components/ui/chat-container\";\nimport { Message, MessageContent } from \"@/components/ui/message\";\nimport { PromptInput, PromptInputTextarea } from \"@/components/ui/prompt-input\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ChatMessage {\n  id: string;\n  content: string;\n  role: \"user\" | \"assistant\";\n  results?: Result[];\n  columns?: string[];\n  chartConfig?: Config | null;\n  isLoading?: boolean;\n  loadingStep?: number;\n}\n\nexport default function Page() {\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: \"1\",\n      content:\n        \"Hello! I can help you analyze data using natural language queries. What would you like to know?\",\n      role: \"assistant\",\n    },\n  ]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleSubmit = async () => {\n    if (!inputValue.trim()) return;\n\n    // Add user message\n    const userMessage: ChatMessage = {\n      id: Date.now().toString(),\n      content: inputValue,\n      role: \"user\",\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n\n    // Add loading message\n    const loadingMsgId = (Date.now() + 1).toString();\n    const loadingMessage: ChatMessage = {\n      id: loadingMsgId,\n      content: \"Analyzing your request...\",\n      role: \"assistant\",\n      isLoading: true,\n      loadingStep: 1,\n    };\n\n    setMessages((prev) => [...prev, loadingMessage]);\n    setInputValue(\"\");\n\n    try {\n      // Generate SQL query\n      const query = await generateQuery(inputValue);\n      if (query === undefined) {\n        throw new Error(\"Failed to generate query\");\n      }\n\n      // Update loading message to show query\n      setMessages((prev) =>\n        prev.map((msg) =>\n          msg.id === loadingMsgId\n            ? {\n                ...msg,\n                content: `Generated SQL Query:\\n\\`\\`\\`sql\\n${query}\\n\\`\\`\\`\\nFetching results...`,\n                loadingStep: 2,\n              }\n            : msg\n        )\n      );\n\n      // Execute query\n      const companies = await runGenerateSQLQuery(query);\n      const columns = companies.length > 0 ? Object.keys(companies[0]) : [];\n\n      // Generate chart config\n      const generation = await generateChartConfig(companies, inputValue);\n      const chartConfig = generation.config || null;\n\n      // Remove loading message and add results message\n      setMessages((prev) => {\n        const filtered = prev.filter((msg) => msg.id !== loadingMsgId);\n        return [\n          ...filtered,\n          {\n            id: (Date.now() + 2).toString(),\n            content: \"Here are the results of your query:\",\n            role: \"assistant\",\n            results: companies,\n            columns: columns,\n            chartConfig,\n          },\n        ];\n      });\n    } catch (e) {\n      // Remove loading message and add error message\n      setMessages((prev) => {\n        const filtered = prev.filter((msg) => msg.id !== loadingMsgId);\n        return [\n          ...filtered,\n          {\n            id: (Date.now() + 2).toString(),\n            content:\n              \"Sorry, I encountered an error while processing your request. Please try again.\",\n            role: \"assistant\",\n          },\n        ];\n      });\n      toast.error(\"An error occurred. Please try again.\");\n    }\n  };\n\n  return (\n    <main className=\"flex h-screen flex-col bg-white\">\n      <div className=\"flex-1 overflow-hidden\">\n        <div className=\"h-full overflow-y-auto\">\n          <div className=\"mx-auto max-w-3xl px-4 py-6\">\n            <ChatContainer>\n              {messages.map((message) => (\n                <Message key={message.id}>\n                  <div\n                    className={cn(\n                      \"w-full py-4\",\n                      message.role === \"assistant\" ? \"bg-gray-50\" : \"\"\n                    )}\n                  >\n                    <div className=\"mx-auto max-w-3xl\">\n                      {message.isLoading ? (\n                        <div className=\"flex items-center gap-3\">\n                          <Loader2 className=\"h-4 w-4 animate-spin\" />\n                          <span>{message.content}</span>\n                        </div>\n                      ) : (\n                        <>\n                          <div\n                            className={\n                              message.content.includes(\"```\")\n                                ? \"prose dark:prose-invert\"\n                                : \"\"\n                            }\n                          >\n                            <MessageContent\n                              markdown={message.content.includes(\"```\")}\n                            >\n                              {message.content}\n                            </MessageContent>\n                          </div>\n                          {message.results && message.columns && (\n                            <div className=\"mt-4 border rounded-lg p-4 bg-white\">\n                              <Results\n                                results={message.results}\n                                columns={message.columns}\n                                chartConfig={message.chartConfig || null}\n                              />\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </Message>\n              ))}\n            </ChatContainer>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"border-t bg-white\">\n        <div className=\"mx-auto max-w-3xl px-4 py-4\">\n          <PromptInput\n            value={inputValue}\n            onValueChange={setInputValue}\n            onSubmit={handleSubmit}\n          >\n            <PromptInputTextarea\n              placeholder=\"Ask a question about your data...\"\n              className=\"min-h-[60px] w-full resize-none rounded-lg border-0 bg-transparent p-4 shadow-none focus:ring-0 focus-visible:ring-0 md:text-sm\"\n            />\n          </PromptInput>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}